{
   "openapi":"3.0.2",
   "info":{
      "title":"FAR Swarm Wrapper RESTful API",
      "description":"ðŸš€ Wie sind FARoboter!",
      "contact":{
         "name":"Contact us",
         "url":"https://www.farobottech.com/"
      },
      "version":"2.1.20.1"
   },
   "paths":{
      "/login/access-token":{
         "post":{
            "tags":[
               "login"
            ],
            "summary":"Login For Access Token",
            "description":"Create access token.",
            "operationId":"login_for_access_token_login_access_token_post",
            "requestBody":{
               "content":{
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "$ref":"#/components/schemas/Body_login_for_access_token_login_access_token_post"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Token"
                        }
                     }
                  }
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "access_level":2
         }
      },
      "/login/fake":{
         "get":{
            "tags":[
               "login"
            ],
            "summary":"Login Fake",
            "description":"Used to make authorize lock shown on documentation",
            "operationId":"login_fake_login_fake_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Login Fake Login Fake Get",
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":99
         }
      },
      "/users/me":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Get Current User",
            "description":"Get current user.",
            "operationId":"get_current_user_users_me_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/User"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/users":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Get All Users",
            "description":"Get all users.",
            "operationId":"get_all_users_users_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UsersInDB"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/users/":{
         "post":{
            "tags":[
               "users"
            ],
            "summary":"Create A New User",
            "description":"Create a new user",
            "operationId":"create_a_new_user_users__post",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Accountid",
                     "type":"string"
                  },
                  "name":"accountID",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Accountpwd",
                     "type":"string"
                  },
                  "name":"accountPwd",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Username",
                     "type":"string"
                  },
                  "name":"userName",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Phonenum",
                     "type":"string"
                  },
                  "name":"phoneNum",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Email",
                     "type":"string"
                  },
                  "name":"email",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/Auth"
                  },
                  "name":"userAuth",
                  "in":"query"
               }
            ],
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/User"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/users/{accountID}":{
         "put":{
            "tags":[
               "users"
            ],
            "summary":"Update A User",
            "description":"Update a user.",
            "operationId":"update_a_user_users__accountID__put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Accountid",
                     "type":"string"
                  },
                  "name":"accountID",
                  "in":"path"
               },
               {
                  "required":false,
                  "schema":{
                     "$ref":"#/components/schemas/Auth"
                  },
                  "name":"new_auth",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"New Phonenum",
                     "type":"string"
                  },
                  "name":"new_phoneNum",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"New Email",
                     "type":"string"
                  },
                  "name":"new_email",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"New Pwd",
                     "type":"string"
                  },
                  "name":"new_pwd",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update A User Users  Accountid  Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "delete":{
            "tags":[
               "users"
            ],
            "summary":"Delete An Existing User",
            "description":"Delete an existing user.",
            "operationId":"delete_an_existing_user_users__accountID__delete",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Accountid",
                     "type":"string"
                  },
                  "name":"accountID",
                  "in":"path"
               }
            ],
            "responses":{
               "204":{
                  "description":"Successful Response"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/robots/scan":{
         "get":{
            "tags":[
               "robots"
            ],
            "summary":"Get Scan Robots",
            "description":"Get scan robots.",
            "operationId":"get_scan_robots_robots_scan_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__RobotScanListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/robots/":{
         "get":{
            "tags":[
               "robots"
            ],
            "summary":"Get All Robots Navigation Status",
            "description":"Get all robots navigation status.",
            "operationId":"get_all_robots_navigation_status_robots__get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Model",
                     "type":"string"
                  },
                  "name":"model",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Nav Status",
                     "type":"integer"
                  },
                  "name":"nav_status",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Map",
                     "type":"string"
                  },
                  "name":"map",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__FleetStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/robots/{robot_id}":{
         "get":{
            "tags":[
               "robots"
            ],
            "summary":"Get One Robot Navigation Status",
            "description":"Get one robot navigation status.",
            "operationId":"get_one_robot_navigation_status_robots__robot_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__RobotStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/roles/":{
         "get":{
            "tags":[
               "roles"
            ],
            "summary":"Get Role List",
            "description":"Get role list.",
            "operationId":"get_role_list_roles__get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__RoleListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/roles/{role_name}":{
         "get":{
            "tags":[
               "roles"
            ],
            "summary":"Get Role Detail",
            "description":"Get role detail.",
            "operationId":"get_role_detail_roles__role_name__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Role Name",
                     "type":"string"
                  },
                  "name":"role_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__RoleDetailRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/tasks/":{
         "get":{
            "tags":[
               "tasks"
            ],
            "summary":"Get All Tasks",
            "description":"Get all tasks.",
            "operationId":"get_all_tasks_tasks__get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"State",
                     "type":"integer"
                  },
                  "name":"state",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__TaskStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "tasks"
            ],
            "summary":"Create Task",
            "description":"Create a task.",
            "operationId":"create_task_tasks__post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/TaskRequestRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TaskRequestRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/tasks/{task_id}":{
         "get":{
            "tags":[
               "tasks"
            ],
            "summary":"Get One Task",
            "description":"Get one task.",
            "operationId":"get_one_task_tasks__task_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Task Id",
                     "type":"string"
                  },
                  "name":"task_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TaskSummaryRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         },
         "delete":{
            "tags":[
               "tasks"
            ],
            "summary":"Delete One Task",
            "description":"Delete one task.",
            "operationId":"delete_one_task_tasks__task_id__delete",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Task Id",
                     "type":"string"
                  },
                  "name":"task_id",
                  "in":"path"
               }
            ],
            "responses":{
               "204":{
                  "description":"Successful Response"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/events/":{
         "get":{
            "tags":[
               "events"
            ],
            "summary":"Get All Events",
            "operationId":"get_all_events_events__get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Level",
                     "type":"string"
                  },
                  "name":"level",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Event Msg",
                     "type":"string"
                  },
                  "name":"event_msg",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__EventArrayRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/events/{event_id}":{
         "get":{
            "tags":[
               "events"
            ],
            "summary":"Get One Event",
            "operationId":"get_one_event_events__event_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Event Id",
                     "type":"string"
                  },
                  "name":"event_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__EventRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/maps/":{
         "get":{
            "tags":[
               "maps"
            ],
            "summary":"Get Map List On Swarm Core",
            "description":"Get map list on swarm core.",
            "operationId":"get_map_list_on_swarm_core_maps__get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/maps/robot_maps":{
         "get":{
            "tags":[
               "maps"
            ],
            "summary":"Get Map List On Robot",
            "description":"Get map list on robot.",
            "operationId":"get_map_list_on_robot_maps_robot_maps_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/maps/{map_name}":{
         "get":{
            "tags":[
               "maps"
            ],
            "summary":"Get Map On Swarm Core Detail",
            "description":"Get map on swamr core detail.",
            "operationId":"get_map_on_swarm_core_detail_maps__map_name__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Map Name",
                     "type":"string"
                  },
                  "name":"map_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapDetailRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/maps/deploy":{
         "post":{
            "tags":[
               "maps"
            ],
            "summary":"Deploy Map To Robots",
            "description":"Deploy map to robots.",
            "operationId":"deploy_map_to_robots_maps_deploy_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapDeployRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapDeployRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/maps/get_deploy_status":{
         "post":{
            "tags":[
               "maps"
            ],
            "summary":"Get Map Deploy Status",
            "description":"Get map deploy status.",
            "operationId":"get_map_deploy_status_maps_get_deploy_status_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapGetDeployStatusReqRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapGetDeployStatusRspListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/triton_maps/":{
         "get":{
            "tags":[
               "triton_maps"
            ],
            "summary":"Get Triton Map List On Swarm Core",
            "description":"Get triton map list on swarm core.",
            "operationId":"get_triton_map_list_on_swarm_core_triton_maps__get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TritonMapListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/triton_maps/robot_maps":{
         "get":{
            "tags":[
               "triton_maps"
            ],
            "summary":"Get Triton Map List On Robot",
            "description":"Get triton map list on robot.",
            "operationId":"get_triton_map_list_on_robot_triton_maps_robot_maps_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TritonMapListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/triton_maps/deploy":{
         "post":{
            "tags":[
               "triton_maps"
            ],
            "summary":"Deploy Triton Map To Robots",
            "description":"Deploy triton map to robots.",
            "operationId":"deploy_triton_map_to_robots_triton_maps_deploy_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapDeployRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapDeployRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/triton_maps/upload_robot_map":{
         "post":{
            "tags":[
               "triton_maps"
            ],
            "summary":"Upload Map From Robot",
            "description":"Upload map from robot.",
            "operationId":"upload_map_from_robot_triton_maps_upload_robot_map_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapUploadRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapUploadRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/graphs/":{
         "get":{
            "tags":[
               "graphs"
            ],
            "summary":"Get All Graphs",
            "description":"Get all graphs.",
            "operationId":"get_all_graphs_graphs__get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/GraphListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/graphs/{graph_name}":{
         "get":{
            "tags":[
               "graphs"
            ],
            "summary":"Get One Graph",
            "description":"Get one graph.",
            "operationId":"get_one_graph_graphs__graph_name__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Graph Name",
                     "type":"string"
                  },
                  "name":"graph_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/GraphRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/paths/":{
         "get":{
            "tags":[
               "paths"
            ],
            "summary":"Get All Paths",
            "description":"Get all paths.",
            "operationId":"get_all_paths_paths__get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__PathListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/paths/{robot_id}":{
         "get":{
            "tags":[
               "paths"
            ],
            "summary":"Get One Path",
            "description":"Get one path.",
            "operationId":"get_one_path_paths__robot_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__PathRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/settings/get_core_settings":{
         "get":{
            "tags":[
               "settings"
            ],
            "summary":"Get Swarm Core Settings",
            "operationId":"get_swarm_core_settings_settings_get_core_settings_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__CoreSettingsRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/settings/get_core_metadata":{
         "get":{
            "tags":[
               "settings"
            ],
            "summary":"Get Swarm Core Settings",
            "operationId":"get_swarm_core_settings_settings_get_core_metadata_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CoreMetadatasRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/settings/get_agent_settings":{
         "post":{
            "tags":[
               "settings"
            ],
            "summary":"Get Swarm Agent Settings",
            "operationId":"get_swarm_agent_settings_settings_get_agent_settings_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/AgentGetSettingsReqRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AgentGetSettingsRspListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/settings/get_agent_metadata":{
         "post":{
            "tags":[
               "settings"
            ],
            "summary":"Get Swarm Agent Metadata",
            "operationId":"get_swarm_agent_metadata_settings_get_agent_metadata_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/AgentGetMetadataReqRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AgentGetMetadataRspListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/settings/get_artifact_settings":{
         "post":{
            "tags":[
               "settings"
            ],
            "summary":"Get Swarm Artifact Settings",
            "operationId":"get_swarm_artifact_settings_settings_get_artifact_settings_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/ArtifactGetSettingsReqRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactGetSettingsRspListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/settings/set_core_settings":{
         "put":{
            "tags":[
               "settings"
            ],
            "summary":"Set Swarm Core Settings",
            "operationId":"set_swarm_core_settings_settings_set_core_settings_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__CoreSettingsRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__CoreSettingsRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/settings/set_agent_settings":{
         "put":{
            "tags":[
               "settings"
            ],
            "summary":"Set Swarm Agent Settings",
            "operationId":"set_swarm_agent_settings_settings_set_agent_settings_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/AgentSetSettingsReqListRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AgentSetSettingsReqListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/settings/set_artifact_settings":{
         "put":{
            "tags":[
               "settings"
            ],
            "summary":"Set Swarm Artifact Settings",
            "operationId":"set_swarm_artifact_settings_settings_set_artifact_settings_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/ArtifactSetSettingsReqListRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactSetSettingsReqListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/sw_update/get_sw_list":{
         "get":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Sw List On Repository",
            "description":"Get sw list on repository.",
            "operationId":"get_sw_list_on_repository_sw_update_get_sw_list_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SwListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/sw_update/get_core_sw_version":{
         "get":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Swarm Core Sw Version",
            "description":"Get swarm core sw version.",
            "operationId":"get_swarm_core_sw_version_sw_update_get_core_sw_version_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CoreSwVersionRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/sw_update/get_agent_sw_version":{
         "post":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Swarm Agent Sw Version",
            "operationId":"get_swarm_agent_sw_version_sw_update_get_agent_sw_version_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/AgentGetSwVersionReqRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AgentGetSwVersionRspListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/sw_update/update_core_sw":{
         "put":{
            "tags":[
               "sw_update"
            ],
            "summary":"Update Swarm Core Sw",
            "operationId":"update_swarm_core_sw_sw_update_update_core_sw_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CoreSwVersionRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CoreSwVersionRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "409":{
                  "description":"Conflict"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/sw_update/update_agent_sw":{
         "put":{
            "tags":[
               "sw_update"
            ],
            "summary":"Update Swarm Agent Sw",
            "description":"Update_swarm_agent_sw.",
            "operationId":"update_swarm_agent_sw_sw_update_update_agent_sw_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/AgentUpdateSwReqListRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AgentUpdateSwReqListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/sw_update/get_core_sw_update_status":{
         "get":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Swarm Core Sw Update Status",
            "operationId":"get_swarm_core_sw_update_status_sw_update_get_core_sw_update_status_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CoreSwUpdateStatusRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/sw_update/get_agent_sw_update_status":{
         "post":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Swarm Agent Sw Update Status",
            "operationId":"get_swarm_agent_sw_update_status_sw_update_get_agent_sw_update_status_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/AgentGetSwUpdateStatusReqRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AgentGetSwUpdateStatusRspListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/artifacts/scan":{
         "get":{
            "tags":[
               "artifacts"
            ],
            "summary":"Get Scan Artifacts",
            "description":"Get scan artifacts.",
            "operationId":"get_scan_artifacts_artifacts_scan_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__ArtifactScanListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/event_callback":{
         "post":{
            "tags":[
               "event_callback"
            ],
            "summary":"Create Callback Event",
            "operationId":"create_callback_event_event_callback_post",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Callback Url",
                     "maxLength":2083,
                     "minLength":1,
                     "type":"string",
                     "format":"uri"
                  },
                  "name":"callback_url",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           
                        }
                     }
                  }
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "callbacks":{
               "callback_response":{
                  "{$callback_url}":{
                     "post":{
                        "tags":[
                           "event_callback"
                        ],
                        "summary":"Callback Response",
                        "operationId":"callback_response__callback_url__post",
                        "responses":{
                           "200":{
                              "description":"Successful Response",
                              "content":{
                                 "application/json":{
                                    "schema":{
                                       
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/fleets":{
         "get":{
            "tags":[
               "fleets"
            ],
            "summary":"Get Existing Fleet List In System",
            "description":"## Response format: \n\n\n**Key-value pair of fleet_name and alias_name (fleet_name: alias_name)**",
            "operationId":"get_existing_fleet_list_in_system_v2_fleets_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Existing Fleet List In System V2 Fleets Get",
                           "type":"object"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/fleets/settings":{
         "get":{
            "tags":[
               "fleets"
            ],
            "summary":"Get Fleet Settings Of An Existing Fleet",
            "description":"Get the fleet settings of an existing fleet in swarm core.",
            "operationId":"get_fleet_settings_of_an_existing_fleet_v2_fleets_settings_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Fleet Name",
                     "type":"string"
                  },
                  "name":"fleet_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FleetSettings"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/fleets/state":{
         "get":{
            "tags":[
               "fleets"
            ],
            "summary":"Get Robots Navigation Status In Each Fleet",
            "description":"Get navigation status of robots in each fleet.",
            "operationId":"get_robots_navigation_status_in_each_fleet_v2_fleets_state_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Fleet Name",
                     "type":"string"
                  },
                  "name":"fleet_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__FleetStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/fleets/state/{robot_id}":{
         "get":{
            "tags":[
               "fleets"
            ],
            "summary":"Get One Robot Navigation Status",
            "description":"Get navigation status of a specific robot from fleet state.",
            "operationId":"get_one_robot_navigation_status_v2_fleets_state__robot_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__RobotStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/fleets/status":{
         "get":{
            "tags":[
               "fleets"
            ],
            "summary":"Get Robot And Artifact Fleet Status In Each Fleet",
            "description":"Get fleet status of robots and artifacts in each fleet. \n\n**Note: if mode is not provided, only agent status will be shown**",
            "operationId":"get_robot_and_artifact_fleet_status_in_each_fleet_v2_fleets_status_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Fleet Name",
                     "type":"string"
                  },
                  "name":"fleet_name",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "$ref":"#/components/schemas/FleetStateMode"
                  },
                  "name":"mode",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__FleetStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/fleets/status/{id}":{
         "get":{
            "tags":[
               "fleets"
            ],
            "summary":"Get One Robot Or Artifact Fleet Status",
            "description":"Get fleet status of a specific robot or artifact. \n\n**Note: id can be robot_id or artifact_id**",
            "operationId":"get_one_robot_or_artifact_fleet_status_v2_fleets_status__id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Id",
                     "type":"string"
                  },
                  "name":"id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get One Robot Or Artifact Fleet Status V2 Fleets Status  Id  Get",
                           "type":"object"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/fleets/{fleet_name}":{
         "get":{
            "tags":[
               "fleets"
            ],
            "summary":"Get Settings Of An Existing Fleet",
            "description":"Get the settings of an existing fleet in swarm core.",
            "operationId":"get_settings_of_an_existing_fleet_v2_fleets__fleet_name__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Fleet Name",
                     "type":"string"
                  },
                  "name":"fleet_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FleetSettings"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Internal Server Error"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "put":{
            "tags":[
               "fleets"
            ],
            "summary":"Update Settings Of An Existing Fleet",
            "description":"Update the settings of an existing fleet \n\n[**call update_fleet | apply_configuration automatically**]",
            "operationId":"update_settings_of_an_existing_fleet_v2_fleets__fleet_name__put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Fleet Name",
                     "type":"string"
                  },
                  "name":"fleet_name",
                  "in":"path"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"New Alias Name",
                     "type":"string"
                  },
                  "name":"new_alias_name",
                  "in":"query"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/OptionalFleetSettings"
                     },
                     "example":{
                        "description":"Update the settings partially, keep ONLY the fields you want to overwrite",
                        "agents":[
                           "fb_101"
                        ],
                        "artifacts":{
                           "external":[
                              
                           ],
                           "agent":[
                              {
                                 "fb_101":[
                                    "lift_module@artifact_fb_101"
                                 ]
                              }
                           ]
                        },
                        "maps":[
                           
                        ],
                        "roles":[
                           
                        ],
                        "flows":[
                           "flow2"
                        ]
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update Settings Of An Existing Fleet V2 Fleets  Fleet Name  Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "post":{
            "tags":[
               "fleets"
            ],
            "summary":"Create A New Fleet",
            "description":"Create a new fleet \n\n[**call update_fleet | apply_configuration automatically**]",
            "operationId":"create_a_new_fleet_v2_fleets__fleet_name__post",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Fleet Name",
                     "type":"string"
                  },
                  "name":"fleet_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FleetSettings"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "delete":{
            "tags":[
               "fleets"
            ],
            "summary":"Delete A Fleet",
            "description":"Delete a fleet from swarm core \n\n(**CAUTION: It deletes fleet settings and related flows**) \n\n[**call update_fleet | apply_configuration automatically**]",
            "operationId":"delete_a_fleet_v2_fleets__fleet_name__delete",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Fleet Name",
                     "type":"string"
                  },
                  "name":"fleet_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Delete A Fleet V2 Fleets  Fleet Name  Delete",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/robots/scan":{
         "get":{
            "tags":[
               "robots"
            ],
            "summary":"Get Scan Robots",
            "description":"Get scan robots via RMT.",
            "operationId":"get_scan_robots_v2_robots_scan_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__RobotScanListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/robots/state":{
         "get":{
            "tags":[
               "robots"
            ],
            "summary":"Get Robot Status Of All Robots",
            "description":"Get robot status of all robots from robot state.",
            "operationId":"get_robot_status_of_all_robots_v2_robots_state_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RobotsStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/robots/status":{
         "get":{
            "tags":[
               "robots"
            ],
            "summary":"Get Robot Status Of All Robots",
            "description":"Get robot status of all robots from robot state.",
            "operationId":"get_robot_status_of_all_robots_v2_robots_status_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RobotsStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/robots/templates":{
         "get":{
            "tags":[
               "robots"
            ],
            "summary":"Get Templates Of All Robot Types",
            "description":"Get tempaltes of all robot types which describe their capabilities",
            "operationId":"get_templates_of_all_robot_types_v2_robots_templates_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Templates Of All Robot Types V2 Robots Templates Get",
                           "type":"object"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/robots/pause":{
         "put":{
            "tags":[
               "robots"
            ],
            "summary":"Pause One Robot",
            "description":"Pause a robot immediately. (Caution: API may be blocked due to delay)",
            "operationId":"pause_one_robot_v2_robots_pause_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RobotStateWithoutConnectState"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "409":{
                  "description":"Conflict"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/robots/resume":{
         "put":{
            "tags":[
               "robots"
            ],
            "summary":"Resume One Robot",
            "description":"Resume a robot from pause mode. (Caution: API may be blocked due to delay)",
            "operationId":"resume_one_robot_v2_robots_resume_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RobotStateWithoutConnectState"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/robots/{robot_id}":{
         "put":{
            "tags":[
               "robots"
            ],
            "summary":"Apply Action To One Robot",
            "description":"Apply an action to a robot immediately. (Caution: API may be blocked due to delay)",
            "operationId":"apply_action_to_one_robot_v2_robots__robot_id__put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"path"
               },
               {
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/Action"
                  },
                  "name":"action",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RobotStateWithoutConnectState"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "409":{
                  "description":"Conflict"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/robots/{robot_id}/velocity":{
         "put":{
            "tags":[
               "robots"
            ],
            "summary":"Set One Robot Velocity In Manual Mode",
            "description":"Se one robot velocity (Only applicable when robot is in manual mode).",
            "operationId":"set_one_robot_velocity_in_manual_mode_v2_robots__robot_id__velocity_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"path"
               },
               {
                  "description":"Right hand rule, unit: m/s",
                  "required":false,
                  "schema":{
                     "title":"X",
                     "type":"number",
                     "description":"Right hand rule, unit: m/s",
                     "default":0.0
                  },
                  "name":"x",
                  "in":"query"
               },
               {
                  "description":"Right hand rule, unit: rad/s",
                  "required":false,
                  "schema":{
                     "title":"Theta",
                     "type":"number",
                     "description":"Right hand rule, unit: rad/s",
                     "default":0.0
                  },
                  "name":"theta",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Set One Robot Velocity In Manual Mode V2 Robots  Robot Id  Velocity Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/robots/{robot_id}/mapping":{
         "get":{
            "tags":[
               "robots"
            ],
            "summary":"Get One Robot Mapping Data",
            "description":"Get one robot mapping data (Only applicable when robot is in **manual** mode).",
            "operationId":"get_one_robot_mapping_data_v2_robots__robot_id__mapping_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get One Robot Mapping Data V2 Robots  Robot Id  Mapping Get",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/events":{
         "get":{
            "tags":[
               "events"
            ],
            "summary":"Get All Events",
            "operationId":"get_all_events_v2_events_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Level",
                     "type":"string"
                  },
                  "name":"level",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Event Msg",
                     "type":"string"
                  },
                  "name":"event_msg",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__EventArrayRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         },
         "post":{
            "tags":[
               "events"
            ],
            "summary":"Create One Event",
            "description":"Create a event (will be logged in UI log section)\n\nEx.\n    event_type: api_initialized |\n    level: INFO | \n    module: api;swarm_core |\n    event_msg: Swarm core api went online. |\n    robot_id: ''",
            "operationId":"create_one_event_v2_events_post",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Event Type",
                     "type":"string"
                  },
                  "name":"event_type",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Level",
                     "type":"string"
                  },
                  "name":"level",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Module",
                     "type":"string"
                  },
                  "name":"module",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Event Msg",
                     "type":"string"
                  },
                  "name":"event_msg",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string",
                     "default":""
                  },
                  "name":"robot_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__EventRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/events/{event_id}":{
         "get":{
            "tags":[
               "events"
            ],
            "summary":"Get One Event",
            "operationId":"get_one_event_v2_events__event_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Event Id",
                     "type":"string"
                  },
                  "name":"event_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__EventRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/events/create":{
         "post":{
            "tags":[
               "events"
            ],
            "summary":"Create One Event",
            "description":"Create a event (will be logged in UI log section)\n\nEx.\n    event_type: api_initialized |\n    level: INFO | \n    module: api;swarm_core |\n    event_msg: Swarm core api went online. |\n    robot_id: ''",
            "operationId":"create_one_event_v2_events_create_post",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Event Type",
                     "type":"string"
                  },
                  "name":"event_type",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Level",
                     "type":"string"
                  },
                  "name":"level",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Module",
                     "type":"string"
                  },
                  "name":"module",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Event Msg",
                     "type":"string"
                  },
                  "name":"event_msg",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string",
                     "default":""
                  },
                  "name":"robot_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__EventRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/artifacts/scan":{
         "get":{
            "tags":[
               "artifacts"
            ],
            "summary":"Get Scan Artifacts",
            "description":"Get scan artifacts via RMT (parameters are filters).",
            "operationId":"get_scan_artifacts_v2_artifacts_scan_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Support Sdk",
                     "type":"boolean"
                  },
                  "name":"support_sdk",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Wrapper Name",
                     "type":"string"
                  },
                  "name":"wrapper_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__ArtifactScanListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/artifacts/status":{
         "get":{
            "tags":[
               "artifacts"
            ],
            "summary":"Get Artifact Status Of All Artifacts",
            "description":"Get artifact status of all artifacts. \n\n---------------------------------\nNote: states of an artifact are \n\n- InService\n- Error\n- Maintenance\n- Disconnect",
            "operationId":"get_artifact_status_of_all_artifacts_v2_artifacts_status_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "$ref":"#/components/schemas/ArtifactStatusMode"
                  },
                  "name":"mode",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/artifacts/status/{artifact_id}":{
         "get":{
            "tags":[
               "artifacts"
            ],
            "summary":"Get Artifact Status Of One Artifact",
            "description":"Get artifact status of one artifact. \n\n---------------------------------\nNote: states of an artifact are \n\n- InService\n- Error\n- Maintenance\n- Disconnect",
            "operationId":"get_artifact_status_of_one_artifact_v2_artifacts_status__artifact_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Artifact Id",
                     "type":"string"
                  },
                  "name":"artifact_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactInfoRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/artifacts/templates":{
         "get":{
            "tags":[
               "artifacts"
            ],
            "summary":"Get Templates Of All Artifact Types",
            "description":"Get templates of all artifact types which descibe service details",
            "operationId":"get_templates_of_all_artifact_types_v2_artifacts_templates_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Artifact Type",
                     "type":"string"
                  },
                  "name":"artifact_type",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Templates Of All Artifact Types V2 Artifacts Templates Get",
                           "type":"object"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/artifacts/state":{
         "get":{
            "tags":[
               "artifacts"
            ],
            "summary":"Get Artifact State Of All Artifacts",
            "description":"Get artifact state of all artifacts.",
            "operationId":"get_artifact_state_of_all_artifacts_v2_artifacts_state_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/artifacts/state/{artifact_id}":{
         "get":{
            "tags":[
               "artifacts"
            ],
            "summary":"Get Artifact State Of One Artifact",
            "description":"Get artifact state of one artifact.",
            "operationId":"get_artifact_state_of_one_artifact_v2_artifacts_state__artifact_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Artifact Id",
                     "type":"string"
                  },
                  "name":"artifact_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactInfoRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/wms":{
         "get":{
            "tags":[
               "wms"
            ],
            "summary":"Get All Cells Status",
            "description":"Get status of all cells. (Parameres are filters)",
            "operationId":"get_all_cells_status_v2_wms_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Map",
                     "type":"string"
                  },
                  "name":"map",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Area Id",
                     "type":"string"
                  },
                  "name":"area_id",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Cell Id",
                     "type":"string"
                  },
                  "name":"cell_id",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "$ref":"#/components/schemas/GetWMSMode"
                  },
                  "name":"mode",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get All Cells Status V2 Wms Get",
                           "anyOf":[
                              {
                                 "$ref":"#/components/schemas/NewWmsCellsListRest"
                              },
                              {
                                 "$ref":"#/components/schemas/WmsCellsListRest"
                              }
                           ]
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         },
         "put":{
            "tags":[
               "wms"
            ],
            "summary":"Update Cells",
            "description":"Update cells.",
            "operationId":"update_cells_v2_wms_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/WmsCellsUpdateRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update Cells V2 Wms Put",
                           "anyOf":[
                              {
                                 "$ref":"#/components/schemas/NewWmsCellsListRest"
                              },
                              {
                                 "$ref":"#/components/schemas/WmsCellsListRest"
                              }
                           ]
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/wms/update":{
         "put":{
            "tags":[
               "wms"
            ],
            "summary":"Update Cells",
            "description":"Update cells.",
            "operationId":"update_cells_v2_wms_update_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/WmsCellsUpdateRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update Cells V2 Wms Update Put",
                           "anyOf":[
                              {
                                 "$ref":"#/components/schemas/WmsCellsListRest"
                              },
                              {
                                 "$ref":"#/components/schemas/NewWmsCellsListRest"
                              }
                           ]
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/flows":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get Available Flow List",
            "description":"Get all available flow list. (Parameters are filters)",
            "operationId":"get_available_flow_list_v2_flows_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Fleet Name",
                     "type":"string"
                  },
                  "name":"fleet_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FlowListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/flows/definitions":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get Flow Definitions",
            "description":"Get flow definitions.",
            "operationId":"get_flow_definitions_v2_flows_definitions_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Fleet Name",
                     "type":"string"
                  },
                  "name":"fleet_name",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Flow Name",
                     "type":"string"
                  },
                  "name":"flow_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FlowParameterRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/flows/state":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get Flow State Of All Active Flow",
            "description":"Get flow state of all active flows (Parameters are filters).",
            "operationId":"get_flow_state_of_all_active_flow_v2_flows_state_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Flow Name",
                     "type":"string"
                  },
                  "name":"flow_name",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Fleet Name",
                     "type":"string"
                  },
                  "name":"fleet_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FlowStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/flows/state/{flow_id}":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get Flow State Of One Active Flow",
            "description":"Get flow state of one active flow.",
            "operationId":"get_flow_state_of_one_active_flow_v2_flows_state__flow_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Flow Id",
                     "type":"string"
                  },
                  "name":"flow_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FlowStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/flows/status":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get Flow Status Of All Active Flow",
            "description":"Get flow status of all active flows (Parameters are filters).",
            "operationId":"get_flow_status_of_all_active_flow_v2_flows_status_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Flow Name",
                     "type":"string"
                  },
                  "name":"flow_name",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Fleet Name",
                     "type":"string"
                  },
                  "name":"fleet_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FlowStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/flows/status/{flow_id}":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get Flow Status Of One Active Flow",
            "description":"Get flow status of one active flow.",
            "operationId":"get_flow_status_of_one_active_flow_v2_flows_status__flow_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Flow Id",
                     "type":"string"
                  },
                  "name":"flow_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FlowStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/flows/timer-flow-status":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get Timer Flow Status",
            "description":"Get timer flow status (parameters are filters)",
            "operationId":"get_timer_flow_status_v2_flows_timer_flow_status_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Flow Id",
                     "type":"string"
                  },
                  "name":"flow_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TimerFlowStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/flows/{flow_name}":{
         "post":{
            "tags":[
               "flows"
            ],
            "summary":"Trigger A Flow Request",
            "description":"Trigger a flow request via flow request service. (Note: all parameters must be in string)",
            "operationId":"trigger_a_flow_request_v2_flows__flow_name__post",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Flow Name",
                     "type":"string"
                  },
                  "name":"flow_name",
                  "in":"path"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Flow Id",
                     "type":"string"
                  },
                  "name":"flow_id",
                  "in":"query"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/FlowRequestRest"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FlowServiceResponseRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/flows/{flow_id}":{
         "put":{
            "tags":[
               "flows"
            ],
            "summary":"Update An Action To A Triggered Flow",
            "description":"Update an action to a triggered flow",
            "operationId":"update_an_action_to_a_triggered_flow_v2_flows__flow_id__put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Flow Id",
                     "type":"string"
                  },
                  "name":"flow_id",
                  "in":"path"
               },
               {
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/Action_On_Flow"
                  },
                  "name":"action",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FlowServiceResponseRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         },
         "delete":{
            "tags":[
               "flows"
            ],
            "summary":"Delete A Triggered Flow",
            "description":"Delete a triggered flow via flow request service.",
            "operationId":"delete_a_triggered_flow_v2_flows__flow_id__delete",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Flow Id",
                     "type":"string"
                  },
                  "name":"flow_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FlowServiceResponseRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/flows/tasks/removed-task-id":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get Removed Task Id",
            "description":"Get all removed task id in the last 600s.",
            "operationId":"get_removed_task_id_v2_flows_tasks_removed_task_id_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RemoveTaskIdRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/flows/tasks/state":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get State Of All Active Tasks",
            "description":"Get state of all active tasks from flow state.",
            "operationId":"get_state_of_all_active_tasks_v2_flows_tasks_state_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"State",
                     "type":"integer"
                  },
                  "name":"state",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TaskStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/flows/tasks/state/{task_id}":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get State Of One Active Task",
            "description":"Get state of one active task from flow state.",
            "operationId":"get_state_of_one_active_task_v2_flows_tasks_state__task_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Task Id",
                     "type":"string"
                  },
                  "name":"task_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TaskStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "deprecated":true,
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/flows/tasks/removed-task-list":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get Removed Task List",
            "description":"Get all removed task list in the last 600s.",
            "operationId":"get_removed_task_list_v2_flows_tasks_removed_task_list_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RemoveTaskIdRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/flows/tasks/status":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get Status Of All Active Tasks",
            "description":"Get status of all active tasks from flow state.",
            "operationId":"get_status_of_all_active_tasks_v2_flows_tasks_status_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"State",
                     "type":"integer"
                  },
                  "name":"state",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TaskStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/flows/tasks/status/{task_id}":{
         "get":{
            "tags":[
               "flows"
            ],
            "summary":"Get Status Of One Active Task",
            "description":"Get status of one active task from flow state.",
            "operationId":"get_status_of_one_active_task_v2_flows_tasks_status__task_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Task Id",
                     "type":"string"
                  },
                  "name":"task_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TaskStateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/flows/tasks/{task_id}":{
         "put":{
            "tags":[
               "flows"
            ],
            "summary":"Update An Action To A Triggered Task",
            "description":"Update an action to a triggered task",
            "operationId":"update_an_action_to_a_triggered_task_v2_flows_tasks__task_id__put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Task Id",
                     "type":"string"
                  },
                  "name":"task_id",
                  "in":"path"
               },
               {
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/Action_On_Task"
                  },
                  "name":"action",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FlowServiceResponseRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         },
         "delete":{
            "tags":[
               "flows"
            ],
            "summary":"Delete A Triggered Task",
            "description":"Delete a triggered task via flow request service.",
            "operationId":"delete_a_triggered_task_v2_flows_tasks__task_id__delete",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Task Id",
                     "type":"string"
                  },
                  "name":"task_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FlowServiceResponseRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/license/check_result":{
         "get":{
            "tags":[
               "license"
            ],
            "summary":"Get Check Result",
            "description":"Get license check result.",
            "operationId":"get_check_result_v2_license_check_result_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/LicenseCheckResultRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/license/new-license":{
         "put":{
            "tags":[
               "license"
            ],
            "summary":"Update License",
            "description":"Update license \n\n--------------------------------------------------------------------\n[**Block 1 second for update**]",
            "operationId":"update_license_v2_license_new_license_put",
            "requestBody":{
               "content":{
                  "multipart/form-data":{
                     "schema":{
                        "$ref":"#/components/schemas/Body_update_license_v2_license_new_license_put"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update License V2 License New License Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/roles":{
         "get":{
            "tags":[
               "roles"
            ],
            "summary":"Get Role List On Swarm Core",
            "description":"Get role list on swarm core.",
            "operationId":"get_role_list_on_swarm_core_v2_roles_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__RoleListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/roles/related-flows":{
         "get":{
            "tags":[
               "roles"
            ],
            "summary":"Get Flows Relating To A Role",
            "description":"Get all flows which contain the role",
            "operationId":"get_flows_relating_to_a_role_v2_roles_related_flows_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Role Name",
                     "type":"string"
                  },
                  "name":"role_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Flows Relating To A Role V2 Roles Related Flows Get",
                           "type":"array",
                           "items":{
                              
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/roles/supported-behaviors":{
         "get":{
            "tags":[
               "roles"
            ],
            "summary":"Get Supported Behaviors",
            "description":"## Schema desciption: \n\n\nReturn a dictionary with \n\n- **category** as key \n\n- **a list of behaviors** as value \n\n(can be used to update role behaviors)",
            "operationId":"get_supported_behaviors_v2_roles_supported_behaviors_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Supported Behaviors V2 Roles Supported Behaviors Get",
                           "type":"object"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/roles/{role_name}":{
         "post":{
            "tags":[
               "roles"
            ],
            "summary":"Create A New Role",
            "description":"Create a new role (default behavior and capability will be created) \n\n**Forbidden role name: start, finish**",
            "operationId":"create_a_new_role_v2_roles__role_name__post",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Role Name",
                     "type":"string"
                  },
                  "name":"role_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Create A New Role V2 Roles  Role Name  Post",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "delete":{
            "tags":[
               "roles"
            ],
            "summary":"Delete A Role",
            "description":"Delete a role (behavior and capability files will be removed) \n\n**Caution: flows which contain the role will also be removed**",
            "operationId":"delete_a_role_v2_roles__role_name__delete",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Role Name",
                     "type":"string"
                  },
                  "name":"role_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Delete A Role V2 Roles  Role Name  Delete",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/roles/{role_name}/behaviors":{
         "get":{
            "tags":[
               "roles"
            ],
            "summary":"Get Role Behaviors",
            "description":"Get behavior list of a role \n\n-------------------\n**Schema description** \n\n- The string after # is the id of the behavior \n\n- For Artifact, the string after the first @ is artifact type \n\n- For Artifact, the string after the second @ is artifact service \n\n- For Docking, the string after @ is docking option \n\n**Note: Correction has no id cause it has no attribute**",
            "operationId":"get_role_behaviors_v2_roles__role_name__behaviors_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Role Name",
                     "type":"string"
                  },
                  "name":"role_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__RoleDetailRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         },
         "put":{
            "tags":[
               "roles"
            ],
            "summary":"Update Role Behaviors",
            "description":"Update a role with new behavior description \n\n----------------\n**Schema description** \n\n- The string after # means the id for that behavior \n\n- If id is not specified, system will generate one automatically \n\n- For Artifact, the string after the first @ is artifact type \n\n- For Artifact, the string after the second @ is artifact service \n\n- For Docking, the string after @ is docking option \n\n**Note: Correction has no id cause it has no attribute**",
            "operationId":"update_role_behaviors_v2_roles__role_name__behaviors_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Role Name",
                     "type":"string"
                  },
                  "name":"role_name",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__RoleDetailRest"
                     },
                     "example":{
                        "Description":"Docking@<undocking or docking> | Artifact@<type>@<service>",
                        "behavior":[
                           "Move",
                           "Docking@docking",
                           "Artifact@lift_module@lift",
                           "Docking@undocking#YwQ4e",
                           "Move"
                        ]
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update Role Behaviors V2 Roles  Role Name  Behaviors Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/roles/{role_name}/capabilities":{
         "get":{
            "tags":[
               "roles"
            ],
            "summary":"Get Role Capabilities",
            "description":"Get capabilities setting of a role",
            "operationId":"get_role_capabilities_v2_roles__role_name__capabilities_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Role Name",
                     "type":"string"
                  },
                  "name":"role_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RoleCapabilityRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "put":{
            "tags":[
               "roles"
            ],
            "summary":"Update Role Capabilities",
            "description":"Update the capability of a role",
            "operationId":"update_role_capabilities_v2_roles__role_name__capabilities_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Role Name",
                     "type":"string"
                  },
                  "name":"role_name",
                  "in":"path"
               },
               {
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/Category"
                  },
                  "name":"category",
                  "in":"query"
               },
               {
                  "description":"Integer, range from 0-1000 kg",
                  "required":false,
                  "schema":{
                     "title":"Payload",
                     "type":"integer",
                     "description":"Integer, range from 0-1000 kg"
                  },
                  "name":"payload",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "$ref":"#/components/schemas/Perception"
                  },
                  "name":"perception",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update Role Capabilities V2 Roles  Role Name  Capabilities Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/settings/core-settings":{
         "get":{
            "tags":[
               "settings"
            ],
            "summary":"Get Full Swarm Core Settings",
            "description":"Get full swarm core settings.",
            "operationId":"get_full_swarm_core_settings_v2_settings_core_settings_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__CoreSettingsRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "408":{
                  "description":"Request Timeout"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         },
         "put":{
            "tags":[
               "settings"
            ],
            "summary":"Update Full Swarm Core Settings",
            "description":"Update full swarm core settings (will apply configurations automatically)",
            "operationId":"update_full_swarm_core_settings_v2_settings_core_settings_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__CoreSettingsRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update Full Swarm Core Settings V2 Settings Core Settings Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/settings/apply-configurations":{
         "put":{
            "tags":[
               "settings"
            ],
            "summary":"Apply Configurations To Swarm Core",
            "description":"Apply configurations to swarm core.",
            "operationId":"apply_configurations_to_swarm_core_v2_settings_apply_configurations_put",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Apply Configurations To Swarm Core V2 Settings Apply Configurations Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "408":{
                  "description":"Request Timeout"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/settings/reset-core-settings":{
         "put":{
            "tags":[
               "settings"
            ],
            "summary":"Reset Settings Of Swarm Core",
            "description":"Reset settings and custom data of swarm core (**CAUTION: Export core settings first**)",
            "operationId":"reset_settings_of_swarm_core_v2_settings_reset_core_settings_put",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Reset Settings Of Swarm Core V2 Settings Reset Core Settings Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "503":{
                  "description":"Service Unavailable"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/settings/reset-agent-settings":{
         "put":{
            "tags":[
               "settings"
            ],
            "summary":"Reset Settings Of Agents",
            "description":"Reset settings of agents",
            "operationId":"reset_settings_of_agents_v2_settings_reset_agent_settings_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RobotList"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Reset Settings Of Agents V2 Settings Reset Agent Settings Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/settings/reset-artifact-settings":{
         "put":{
            "tags":[
               "settings"
            ],
            "summary":"Reset Settings Of Artifacts",
            "description":"Reset settings of Artifacts",
            "operationId":"reset_settings_of_artifacts_v2_settings_reset_artifact_settings_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/ArtifactList"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Reset Settings Of Artifacts V2 Settings Reset Artifact Settings Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/settings/core-setting-package":{
         "get":{
            "tags":[
               "settings"
            ],
            "summary":"Export Settings Of Swarm Core",
            "description":"Return a tar file with name **SC-Export_{YYYYmmdd-HH-MM-SS}.tar.gz**",
            "operationId":"export_settings_of_swarm_core_v2_settings_core_setting_package_get",
            "responses":{
               "200":{
                  "description":"Successful Response"
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "put":{
            "tags":[
               "settings"
            ],
            "summary":"Import Settings Of Swarm Core",
            "description":"Import settings of swarm core (**Only support .tar.gz file**)",
            "operationId":"import_settings_of_swarm_core_v2_settings_core_setting_package_put",
            "requestBody":{
               "content":{
                  "multipart/form-data":{
                     "schema":{
                        "$ref":"#/components/schemas/Body_import_settings_of_swarm_core_v2_settings_core_setting_package_put"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Import Settings Of Swarm Core V2 Settings Core Setting Package Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/paths/markers":{
         "get":{
            "tags":[
               "paths"
            ],
            "summary":"Get Path Markers",
            "description":"Get path markers. (ns refers to map)",
            "operationId":"get_path_markers_v2_paths_markers_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Ns",
                     "type":"string"
                  },
                  "name":"ns",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Path Markers V2 Paths Markers Get",
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/MarkerRest"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/paths":{
         "get":{
            "tags":[
               "paths"
            ],
            "summary":"Get All Paths",
            "description":"Get all paths.",
            "operationId":"get_all_paths_v2_paths_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__PathListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/paths/{robot_id}":{
         "get":{
            "tags":[
               "paths"
            ],
            "summary":"Get One Path",
            "description":"Get one path.",
            "operationId":"get_one_path_v2_paths__robot_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__PathRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/paths/vertex":{
         "put":{
            "tags":[
               "paths"
            ],
            "summary":"Update Vertex Ownership",
            "description":"## Schema desciption \n\n\n- **release**: takes either robot_id (higher precedence) or map_name + vertex_label \n\n- **block**: takes only map_name + vertex_label",
            "operationId":"update_vertex_ownership_v2_paths_vertex_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/VertexAction"
                  },
                  "name":"action",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Map Name",
                     "type":"string"
                  },
                  "name":"map_name",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Vertex Label",
                     "type":"string"
                  },
                  "name":"vertex_label",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UpdateVertexRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/hik/forbidden-area":{
         "get":{
            "tags":[
               "hik"
            ],
            "summary":"Get Forbidden Area For Hikrobot",
            "description":"Get forbidden area for Hikrobot.",
            "operationId":"get_forbidden_area_for_hikrobot_v2_hik_forbidden_area_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Forbidden Area For Hikrobot V2 Hik Forbidden Area Get",
                           "type":"object"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sw_update/add_debian_package":{
         "put":{
            "tags":[
               "sw_update"
            ],
            "summary":"Add Debian Package",
            "operationId":"add_debian_package_v2_sw_update_add_debian_package_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/AddDebianRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ReturnResultRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sw_update/update_artifact_sw":{
         "put":{
            "tags":[
               "sw_update"
            ],
            "summary":"Update Swarm Artifact Sw",
            "description":"Update_swarm_artifact_sw.",
            "operationId":"update_swarm_artifact_sw_v2_sw_update_update_artifact_sw_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/ArtifactUpdateSwReqListRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactUpdateSwReqListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sw_update/get_artifact_sw_update_status":{
         "post":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Swarm Artifact Sw Update Status",
            "description":"Get_swarm_artifact_sw_update_status.",
            "operationId":"get_swarm_artifact_sw_update_status_v2_sw_update_get_artifact_sw_update_status_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/ArtifactGetSwUpdateStatusReqRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactGetSwUpdateStatusRspRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sw_update/get_ota_update_target":{
         "get":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Ota Update Target",
            "operationId":"get_ota_update_target_v2_sw_update_get_ota_update_target_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/OtaStatusRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sw_update/ota_update_core_sw":{
         "put":{
            "tags":[
               "sw_update"
            ],
            "summary":"Ota Update Local Swarm Agent Sw",
            "operationId":"ota_update_local_swarm_agent_sw_v2_sw_update_ota_update_core_sw_put",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/OtaUpdateRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "409":{
                  "description":"Conflict"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sw_update/get_ota_status":{
         "get":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Ota Status",
            "operationId":"get_ota_status_v2_sw_update_get_ota_status_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/OtaStatusRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sw_update/get_ota_availability":{
         "get":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Ota Availability",
            "description":"Get ota availability of each ecu",
            "operationId":"get_ota_availability_v2_sw_update_get_ota_availability_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AgentOtaAvailRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sw_update/get_swarm_core_env_version":{
         "get":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Local Swarm Agent Env Version",
            "description":"Get local swarm core dev_env version.",
            "operationId":"get_local_swarm_agent_env_version_v2_sw_update_get_swarm_core_env_version_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CoreEnvVersionRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sw_update/get_core_env_list":{
         "get":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Core Env List On Repository",
            "description":"Get core env list on repository.",
            "operationId":"get_core_env_list_on_repository_v2_sw_update_get_core_env_list_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CoreEnvListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sw_update/update_swarm_core_env":{
         "put":{
            "tags":[
               "sw_update"
            ],
            "summary":"Update Swarm Core Env",
            "operationId":"update_swarm_core_env_v2_sw_update_update_swarm_core_env_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CoreEnvVersionRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CoreEnvVersionRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "409":{
                  "description":"Conflict"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sw_update/get_swarm_core_env_update_status":{
         "get":{
            "tags":[
               "sw_update"
            ],
            "summary":"Get Swarm Core Env Update Status",
            "operationId":"get_swarm_core_env_update_status_v2_sw_update_get_swarm_core_env_update_status_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CoreEnvUpdateStatusRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/maps":{
         "get":{
            "tags":[
               "maps"
            ],
            "summary":"Get Map List On Swarm Core",
            "description":"## Response format: \n\n\n**Key-value pair of map_name and alias_name (map_name: alias_name)**",
            "operationId":"get_map_list_on_swarm_core_v2_maps_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Map List On Swarm Core V2 Maps Get",
                           "type":"object"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/maps/robot_maps":{
         "get":{
            "tags":[
               "maps"
            ],
            "summary":"Get Map List On Robot",
            "description":"Get map list on robot.",
            "operationId":"get_map_list_on_robot_v2_maps_robot_maps_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__MapListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/maps/deploy":{
         "post":{
            "tags":[
               "maps"
            ],
            "summary":"Deploy Map To Robots",
            "description":"Deploy map to robots.",
            "operationId":"deploy_map_to_robots_v2_maps_deploy_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__MapDeployRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__MapDeployRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/maps/get_deploy_status":{
         "post":{
            "tags":[
               "maps"
            ],
            "summary":"Get Map Deploy Status",
            "description":"Get map deploy status.",
            "operationId":"get_map_deploy_status_v2_maps_get_deploy_status_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__MapGetDeployStatusReqRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__MapGetDeployStatusRspListRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/maps/upload_robot_map":{
         "post":{
            "tags":[
               "maps"
            ],
            "summary":"Upload Map From Robot",
            "description":"Upload map from robot.",
            "operationId":"upload_map_from_robot_v2_maps_upload_robot_map_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__MapUploadRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__MapUploadRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/maps/cell_relationships":{
         "get":{
            "tags":[
               "maps"
            ],
            "summary":"Get Cell Relationships",
            "operationId":"get_cell_relationships_v2_maps_cell_relationships_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Cell Relationships V2 Maps Cell Relationships Get",
                           "type":"object"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "put":{
            "tags":[
               "maps"
            ],
            "summary":"Update Cell Relationships",
            "operationId":"update_cell_relationships_v2_maps_cell_relationships_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Relationship Dict",
                        "type":"object"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update Cell Relationships V2 Maps Cell Relationships Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "404":{
                  "description":"Not Found"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/maps/{map_name}":{
         "get":{
            "tags":[
               "maps"
            ],
            "summary":"Get Map Details",
            "description":"Get image + info + thumbnail of a specific map",
            "operationId":"get_map_details_v2_maps__map_name__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Map Name",
                     "type":"string"
                  },
                  "name":"map_name",
                  "in":"path"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Thumbnail Width",
                     "type":"integer"
                  },
                  "name":"thumbnail_width",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Thumbnail Height",
                     "type":"integer"
                  },
                  "name":"thumbnail_height",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__MapDetailRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "put":{
            "tags":[
               "maps"
            ],
            "summary":"Update Map Details",
            "description":"## Schema desciption \n\n\n**new_alias_name**: a unique alias name for a map \n\n**new_map_image_data**: take base64 encoded string [png] \n\n**new_map_info_data**: keys [nav_graph, cell, triton] are optional \n\n--------------------------------------------------------------------\nNote: only need to provide **one** of the above schmenas in request \n\n[**apply configuration automatically**]",
            "operationId":"update_map_details_v2_maps__map_name__put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Map Name",
                     "type":"string"
                  },
                  "name":"map_name",
                  "in":"path"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"New Alias Name",
                     "type":"string"
                  },
                  "name":"new_alias_name",
                  "in":"query"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/Body_update_map_details_v2_maps__map_name__put"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update Map Details V2 Maps  Map Name  Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "404":{
                  "description":"Not Found"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "post":{
            "tags":[
               "maps"
            ],
            "summary":"Add New Map",
            "description":"## Schema desciption \n\n\n**map_image_data**: take base64 encoded string [png] \n\n**map_info_data**: keys [nav_graph, cell, triton] are optional \n\n--------------------------------------------------------------------\n[**apply configuration automatically**]",
            "operationId":"add_new_map_v2_maps__map_name__post",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Map Name",
                     "type":"string"
                  },
                  "name":"map_name",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/Body_add_new_map_v2_maps__map_name__post"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Add New Map V2 Maps  Map Name  Post",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "delete":{
            "tags":[
               "maps"
            ],
            "summary":"Delete A Map",
            "description":"Delete a map from the system (**Caution: graph and cells of the map will also be deleted**) \n\n[**apply configuration automatically**]",
            "operationId":"delete_a_map_v2_maps__map_name__delete",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Map Name",
                     "type":"string"
                  },
                  "name":"map_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Delete A Map V2 Maps  Map Name  Delete",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/maps/{map_name}/graph":{
         "get":{
            "tags":[
               "maps"
            ],
            "summary":"Get Graph Details On A Map",
            "description":"Get graph details of a map (in **DOT** format)",
            "operationId":"get_graph_details_on_a_map_v2_maps__map_name__graph_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Map Name"
                  },
                  "name":"map_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "text/html":{
                        "schema":{
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "put":{
            "tags":[
               "maps"
            ],
            "summary":"Update Graph On A Map",
            "description":"Update graph on a map (node and edge) \n\n-------------------------------------\n## Note \n\n\n**Request body (optional)**: takes the whole graph in DOT formated string and will override the original one \n\n[**apply configuration automatically**]",
            "operationId":"update_graph_on_a_map_v2_maps__map_name__graph_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Map Name",
                     "type":"string"
                  },
                  "name":"map_name",
                  "in":"path"
               },
               {
                  "required":false,
                  "schema":{
                     "$ref":"#/components/schemas/GraphAction"
                  },
                  "name":"action",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Node Label",
                     "type":"string"
                  },
                  "name":"node_label",
                  "in":"query"
               },
               {
                  "description":"default = 0.0",
                  "required":false,
                  "schema":{
                     "title":"Node X",
                     "type":"number",
                     "description":"default = 0.0"
                  },
                  "name":"node_x",
                  "in":"query"
               },
               {
                  "description":"default = 0.0",
                  "required":false,
                  "schema":{
                     "title":"Node Y",
                     "type":"number",
                     "description":"default = 0.0"
                  },
                  "name":"node_y",
                  "in":"query"
               },
               {
                  "description":"default = 0.0",
                  "required":false,
                  "schema":{
                     "title":"Node Ori",
                     "type":"number",
                     "description":"default = 0.0"
                  },
                  "name":"node_ori",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Edge From Node",
                     "type":"string"
                  },
                  "name":"edge_from_node",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Edge To Node",
                     "type":"string"
                  },
                  "name":"edge_to_node",
                  "in":"query"
               },
               {
                  "description":"default = 1",
                  "required":false,
                  "schema":{
                     "title":"Edge Weight",
                     "type":"integer",
                     "description":"default = 1"
                  },
                  "name":"edge_weight",
                  "in":"query"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/GraphRawRest"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update Graph On A Map V2 Maps  Map Name  Graph Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "404":{
                  "description":"Not Found"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/maps/{map_name}/cells":{
         "get":{
            "tags":[
               "maps"
            ],
            "summary":"Get Cell Details On A Map",
            "description":"Get cell details on a map (optional parameters are filters)",
            "operationId":"get_cell_details_on_a_map_v2_maps__map_name__cells_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Map Name",
                     "type":"string"
                  },
                  "name":"map_name",
                  "in":"path"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Area Name",
                     "type":"string"
                  },
                  "name":"area_name",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Cell Id",
                     "type":"string"
                  },
                  "name":"cell_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Cell Details On A Map V2 Maps  Map Name  Cells Get",
                           "type":"object"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "put":{
            "tags":[
               "maps"
            ],
            "summary":"Update Cells On A Map",
            "description":"Update details of cells on a map \n\n---------------------------------------\n**Note** \n\nIn Request body, \n\n**override**: takes the format from [GET]/v2/maps/{map_name}/cells and will override the whole cells file \n\n**add**: all fields are mandatory \n\n**update**: all fields are optional except \"area\" and \"cell_id\"\n\n**remove**: all fields are mandatory \n\n[**apply configuration automatically**]",
            "operationId":"update_cells_on_a_map_v2_maps__map_name__cells_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Map Name",
                     "type":"string"
                  },
                  "name":"map_name",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CellUpdateRest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update Cells On A Map V2 Maps  Map Name  Cells Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "404":{
                  "description":"Not Found"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/logs/battery-log":{
         "get":{
            "tags":[
               "logs"
            ],
            "summary":"Get Battery Log Package Of Swarm Core",
            "description":"Get battery log package of swarm core (**Caution: this endpoint blocks for a while**)",
            "operationId":"get_battery_log_package_of_swarm_core_v2_logs_battery_log_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/logs/battery-log/progress":{
         "get":{
            "tags":[
               "logs"
            ],
            "summary":"Get Battery Log Package Generation Progress",
            "description":"Get the generation progress of swarm core battery log package",
            "operationId":"get_battery_log_package_generation_progress_v2_logs_battery_log_progress_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ExportLogProgress"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/logs/debug-log":{
         "get":{
            "tags":[
               "logs"
            ],
            "summary":"Get Debug Log Package Of Swarm Core",
            "description":"Get debug log package of swarm core (**Caution: this endpoint blocks for a while**)",
            "operationId":"get_debug_log_package_of_swarm_core_v2_logs_debug_log_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/logs/debug-log/progress":{
         "get":{
            "tags":[
               "logs"
            ],
            "summary":"Get Debug Log Package Generation Progress",
            "description":"Get the generation progress of swarm core debug log package",
            "operationId":"get_debug_log_package_generation_progress_v2_logs_debug_log_progress_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ExportLogProgress"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":2
         }
      },
      "/v2/restart/core":{
         "put":{
            "tags":[
               "restart"
            ],
            "summary":"Restart Swarm Core Container",
            "description":"Restart swarm core container (**Caution: Please use with care**)",
            "operationId":"restart_swarm_core_container_v2_restart_core_put",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Restart Swarm Core Container V2 Restart Core Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "408":{
                  "description":"Request Timeout"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/restart/robot":{
         "put":{
            "tags":[
               "restart"
            ],
            "summary":"Restart Robot Container",
            "description":"Restart robot container (**Caution: Please use with care**)",
            "operationId":"restart_robot_container_v2_restart_robot_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RobotList"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Restart Robot Container V2 Restart Robot Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/restart/artifact":{
         "put":{
            "tags":[
               "restart"
            ],
            "summary":"Restart Artifact Container",
            "description":"Restart artifact container (**Caution: Please use with care**)",
            "operationId":"restart_artifact_container_v2_restart_artifact_put",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/ArtifactList"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Restart Artifact Container V2 Restart Artifact Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "408":{
                  "description":"Request Timeout"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sdk/artifact-type/meta":{
         "get":{
            "tags":[
               "sdk"
            ],
            "summary":"Get Artifact Type Meta",
            "description":"Get artifact type meta on swarm core",
            "operationId":"get_artifact_type_meta_v2_sdk_artifact_type_meta_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactTypeMeta"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "503":{
                  "description":"Service Unavailable"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "put":{
            "tags":[
               "sdk"
            ],
            "summary":"Upload Artifact Type Meta",
            "description":"Upload artifact type meta (fetch conf template and pictures)",
            "operationId":"upload_artifact_type_meta_v2_sdk_artifact_type_meta_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Artifact Id",
                     "type":"string"
                  },
                  "name":"artifact_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UploadTypeMetaResult"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "404":{
                  "description":"Not Found"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "delete":{
            "tags":[
               "sdk"
            ],
            "summary":"Delete Artifact Type Meta",
            "description":"Delete an existing artifact type (owned by user) \n\n**NOTE: No backup**",
            "operationId":"delete_artifact_type_meta_v2_sdk_artifact_type_meta_delete",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Artifact Type",
                     "type":"string"
                  },
                  "name":"artifact_type",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Delete Artifact Type Meta V2 Sdk Artifact Type Meta Delete",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "404":{
                  "description":"Not Found"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/sdk/artifact-type/robot":{
         "get":{
            "tags":[
               "sdk"
            ],
            "summary":"Get Artifact Type On Robots",
            "description":"Get embedded artifact bind to each robots",
            "operationId":"get_artifact_type_on_robots_v2_sdk_artifact_type_robot_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RobotCapbilityResult"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "503":{
                  "description":"Service Unavailable"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "put":{
            "tags":[
               "sdk"
            ],
            "summary":"Update Artifact Type On Robot",
            "description":"Update embedded artifact bind to a robot (artifact and robot must be alive) \n\n**NOTE: Robot will reboot automatically**",
            "operationId":"update_artifact_type_on_robot_v2_sdk_artifact_type_robot_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Artifact Id",
                     "type":"string"
                  },
                  "name":"artifact_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Update Artifact Type On Robot V2 Sdk Artifact Type Robot Put",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "404":{
                  "description":"Not Found"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         },
         "delete":{
            "tags":[
               "sdk"
            ],
            "summary":"Delete Artifact Type On Robot",
            "description":"Delete embedded artifact bind to a robot \n\n**NOTE: Robot will reboot automatically**",
            "operationId":"delete_artifact_type_on_robot_v2_sdk_artifact_type_robot_delete",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Robot Id",
                     "type":"string"
                  },
                  "name":"robot_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Delete Artifact Type On Robot V2 Sdk Artifact Type Robot Delete",
                           "type":"string"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "404":{
                  "description":"Not Found"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":1
         }
      },
      "/v2/sdk/artifact-request/{artifact_id}":{
         "get":{
            "tags":[
               "sdk"
            ],
            "summary":"Get Artifact Request Status",
            "description":"Get artifact reqeust status \n\n(**Note: if request_id is provided, service must also be provided**)",
            "operationId":"get_artifact_request_status_v2_sdk_artifact_request__artifact_id__get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Artifact Id",
                     "type":"string"
                  },
                  "name":"artifact_id",
                  "in":"path"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Service",
                     "type":"string"
                  },
                  "name":"service",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Request Id",
                     "type":"string"
                  },
                  "name":"request_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactRequestStatusRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         },
         "put":{
            "tags":[
               "sdk"
            ],
            "summary":"Update Active Artifact Request",
            "description":"Apply an action on active artifact request \n\n(**Note: if request_id is not provided, apply on currently running artifact request**)",
            "operationId":"update_active_artifact_request_v2_sdk_artifact_request__artifact_id__put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Artifact Id",
                     "type":"string"
                  },
                  "name":"artifact_id",
                  "in":"path"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Service",
                     "type":"string"
                  },
                  "name":"service",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/ArtifactAction"
                  },
                  "name":"action",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Request Id",
                     "type":"string"
                  },
                  "name":"request_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactActionResultRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         },
         "post":{
            "tags":[
               "sdk"
            ],
            "summary":"Create Artifact Request",
            "description":"Create artifact request to test artifact wrapper",
            "operationId":"create_artifact_request_v2_sdk_artifact_request__artifact_id__post",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Artifact Id",
                     "type":"string"
                  },
                  "name":"artifact_id",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/ArtifactRequestRest"
                     },
                     "example":{
                        "service":"lift",
                        "parameters":{
                           "position":65.0
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactRequestResultRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         },
         "delete":{
            "tags":[
               "sdk"
            ],
            "summary":"Delete Active Artifact Request",
            "description":"Delete an active artifact request \n\n(**Note: if request_id is not provided, delete currently running artifact request**)",
            "operationId":"delete_active_artifact_request_v2_sdk_artifact_request__artifact_id__delete",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Artifact Id",
                     "type":"string"
                  },
                  "name":"artifact_id",
                  "in":"path"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Service",
                     "type":"string"
                  },
                  "name":"service",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Request Id",
                     "type":"string"
                  },
                  "name":"request_id",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactActionResultRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sdk/artifact-runtime-log":{
         "get":{
            "tags":[
               "sdk"
            ],
            "summary":"Get Artifact Runtime Log",
            "description":"Get artifact runtime log \n\n------------------------------\n### Schema Description\n- **line_amount**: max. line amount to fetch\n- **log_level**:\n    - **wrapper**: contains artifact wrapper and low level wrapper logs\n    - **comm**: contains artifact wrapper, low level wrapper, rmt agent, and dds logs\n    - **system**: contains artifact wrapper, low level wrapper, rmt agent, dds, and sys_manager logs",
            "operationId":"get_artifact_runtime_log_v2_sdk_artifact_runtime_log_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Artifact Id",
                     "type":"string"
                  },
                  "name":"artifact_id",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Line Amount",
                     "type":"integer",
                     "default":10
                  },
                  "name":"line_amount",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "allOf":[
                        {
                           "$ref":"#/components/schemas/ArtifactLogLevel"
                        }
                     ],
                     "default":"wrapper"
                  },
                  "name":"log_level",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactRuntimeLogRest"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sdk/artifact-wrapper":{
         "get":{
            "tags":[
               "sdk"
            ],
            "summary":"Get Artifact Wrapper List And Summary",
            "description":"Get artifact wrapper list and their summary \n\n---------\n**Note: thumbnail is 150x150 image string in image/png;base64**",
            "operationId":"get_artifact_wrapper_list_and_summary_v2_sdk_artifact_wrapper_get",
            "parameters":[
               {
                  "required":false,
                  "schema":{
                     "title":"Wrapper Name",
                     "type":"string"
                  },
                  "name":"wrapper_name",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Wrapper Type",
                     "type":"string"
                  },
                  "name":"wrapper_type",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "$ref":"#/components/schemas/WrapperCategory"
                  },
                  "name":"category",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Artifact Wrapper List And Summary V2 Sdk Artifact Wrapper Get",
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ReadWrapperResult"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         },
         "put":{
            "tags":[
               "sdk"
            ],
            "summary":"Update An Existing Artifact Wrapper",
            "description":"Update an existing artifact wrapper \n\n-----------\nCurrently supported functions: \n\n- rename artifact wrapper name",
            "operationId":"update_an_existing_artifact_wrapper_v2_sdk_artifact_wrapper_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Wrapper Name",
                     "type":"string"
                  },
                  "name":"wrapper_name",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"New Wrapper Name",
                     "pattern":"^[a-z][a-z0-9_]*[a-z0-9]$",
                     "type":"string"
                  },
                  "name":"new_wrapper_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UpdateWrapperResult"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         },
         "post":{
            "tags":[
               "sdk"
            ],
            "summary":"Create New Artifact Wrapper",
            "description":"Create a new artifact wrapper \n\n**Note: If wrapper_type is from template, category will be overwritten**",
            "operationId":"create_new_artifact_wrapper_v2_sdk_artifact_wrapper_post",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Wrapper Name",
                     "pattern":"^[a-z][a-z0-9_]*[a-z0-9]$",
                     "type":"string"
                  },
                  "name":"wrapper_name",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Wrapper Type",
                     "pattern":"^[a-z][a-z0-9_]*[a-z0-9]$",
                     "type":"string"
                  },
                  "name":"wrapper_type",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/WrapperCategory"
                  },
                  "name":"category",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CreateWrapperResult"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "404":{
                  "description":"Not Found"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         },
         "delete":{
            "tags":[
               "sdk"
            ],
            "summary":"Delete An Existing Artifact Wrapper",
            "description":"Delete an existing artifact wrapper \n\n**Note: can NOT be undone!**",
            "operationId":"delete_an_existing_artifact_wrapper_v2_sdk_artifact_wrapper_delete",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Wrapper Name",
                     "type":"string"
                  },
                  "name":"wrapper_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/DeleteWrapperResult"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sdk/artifact-wrapper/type-templates":{
         "get":{
            "tags":[
               "sdk"
            ],
            "summary":"Get Type Templates For Artifact Wrapper",
            "description":"Note: \n- all type templates contain default services and category except type - **user-define**\n- type templates are of **version** above 1.0",
            "operationId":"get_type_templates_for_artifact_wrapper_v2_sdk_artifact_wrapper_type_templates_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Type Templates For Artifact Wrapper V2 Sdk Artifact Wrapper Type Templates Get",
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/WrapperTypeTemplateResult"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "503":{
                  "description":"Service Unavailable"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sdk/artifact-wrapper/category":{
         "get":{
            "tags":[
               "sdk"
            ],
            "summary":"Get Supported Category For Artifact Wrapper",
            "operationId":"get_supported_category_for_artifact_wrapper_v2_sdk_artifact_wrapper_category_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "title":"Response Get Supported Category For Artifact Wrapper V2 Sdk Artifact Wrapper Category Get",
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/WrapperCategoryResult"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sdk/artifact-wrapper/package":{
         "get":{
            "tags":[
               "sdk"
            ],
            "summary":"Export Artifact Wrapper Package",
            "description":"Return a tar file with name **Wrapper-Export_{wrapper_name}-{wrapper_id}-{YYYYmmdd-HH-MM-SS}.tar.gz**",
            "operationId":"export_artifact_wrapper_package_v2_sdk_artifact_wrapper_package_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Wrapper Name",
                     "type":"string"
                  },
                  "name":"wrapper_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         },
         "put":{
            "tags":[
               "sdk"
            ],
            "summary":"Import Artifact Wrapper Package",
            "description":"**Note: while importing an artifact wrapper, you assgin a wrapper name to it**",
            "operationId":"import_artifact_wrapper_package_v2_sdk_artifact_wrapper_package_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Wrapper Name",
                     "type":"string"
                  },
                  "name":"wrapper_name",
                  "in":"query"
               }
            ],
            "requestBody":{
               "content":{
                  "multipart/form-data":{
                     "schema":{
                        "$ref":"#/components/schemas/Body_import_artifact_wrapper_package_v2_sdk_artifact_wrapper_package_put"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ImportWrapperResult"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sdk/artifact-wrapper/build":{
         "put":{
            "tags":[
               "sdk"
            ],
            "summary":"Build An Artifact Wrapper",
            "description":"Build an artifact wrapper",
            "operationId":"build_an_artifact_wrapper_v2_sdk_artifact_wrapper_build_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Wrapper Name",
                     "type":"string"
                  },
                  "name":"wrapper_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ArtifactBuildResult"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "503":{
                  "description":"Service Unavailable"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sdk/artifact-wrapper/deploy-candidate":{
         "get":{
            "tags":[
               "sdk"
            ],
            "summary":"Get Artifact Candidate For A Wrapper To Deploy",
            "description":"Note: artifact (id) included in robot capability is defined as **Embedded**, otherwise **External**",
            "operationId":"get_artifact_candidate_for_a_wrapper_to_deploy_v2_sdk_artifact_wrapper_deploy_candidate_get",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Wrapper Name",
                     "type":"string"
                  },
                  "name":"wrapper_name",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/DeployCandidateResult"
                        },
                        "example":{
                           "wrapper_name":"example_wrapper",
                           "wrapper_id":"wrapper_12345",
                           "wrapper_type":"test",
                           "category":"External",
                           "candidate":[
                              "artifact_12345",
                              "artifact_45678"
                           ]
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      },
      "/v2/sdk/artifact-wrapper/deployment":{
         "put":{
            "tags":[
               "sdk"
            ],
            "summary":"Deploy An Artifact Wrapper To Artifacts",
            "description":"Note: \n\n- only applicable for artifacts supporting sdk\n- when category of wrapper is **Embedded**, update robot capability automatically\n- max. blocking time: 60 seconds",
            "operationId":"deploy_an_artifact_wrapper_to_artifacts_v2_sdk_artifact_wrapper_deployment_put",
            "parameters":[
               {
                  "required":true,
                  "schema":{
                     "title":"Wrapper Name",
                     "type":"string"
                  },
                  "name":"wrapper_name",
                  "in":"query"
               },
               {
                  "description":"Apply to all target artifacts (specified by artifact id)",
                  "required":false,
                  "schema":{
                     "allOf":[
                        {
                           "$ref":"#/components/schemas/ArtifactSimType"
                        }
                     ],
                     "description":"Apply to all target artifacts (specified by artifact id)",
                     "default":"false"
                  },
                  "name":"sim_type",
                  "in":"query"
               },
               {
                  "description":"to check enviroment version or not",
                  "required":false,
                  "schema":{
                     "title":"Check Env",
                     "type":"boolean",
                     "description":"to check enviroment version or not",
                     "default":true
                  },
                  "name":"check_env",
                  "in":"query"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/ArtifactList"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/DeployWrapperSummary"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Not Found"
               },
               "400":{
                  "description":"Bad Request"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "OAuth2PasswordBearer":[
                     
                  ]
               }
            ],
            "access_level":0
         }
      }
   },
   "components":{
      "schemas":{
         "Action":{
            "title":"Action",
            "enum":[
               "pause",
               "resume"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "Action_On_Flow":{
            "title":"Action_On_Flow",
            "enum":[
               "pause",
               "resume"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "Action_On_Task":{
            "title":"Action_On_Task",
            "enum":[
               "pause",
               "resume",
               "behavior_retry"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "AddDebianRest":{
            "title":"AddDebianRest",
            "required":[
               "file_dir",
               "pkg_name",
               "override"
            ],
            "type":"object",
            "properties":{
               "file_dir":{
                  "title":"File Dir",
                  "type":"string"
               },
               "pkg_name":{
                  "title":"Pkg Name",
                  "type":"string"
               },
               "override":{
                  "title":"Override",
                  "type":"boolean"
               }
            }
         },
         "AgentGetMetadataReqRest":{
            "title":"AgentGetMetadataReqRest",
            "required":[
               "robot_list"
            ],
            "type":"object",
            "properties":{
               "robot_list":{
                  "title":"Robot List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "AgentGetMetadataRspListRest":{
            "title":"AgentGetMetadataRspListRest",
            "required":[
               "agent_metadata"
            ],
            "type":"object",
            "properties":{
               "agent_metadata":{
                  "title":"Agent Metadata",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/AgentGetMetadataRspRest"
                  }
               }
            }
         },
         "AgentGetMetadataRspRest":{
            "title":"AgentGetMetadataRspRest",
            "required":[
               "robot_id",
               "nav_conf_def"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "nav_conf_def":{
                  "title":"Nav Conf Def",
                  "type":"string"
               }
            }
         },
         "AgentGetSettingsReqRest":{
            "title":"AgentGetSettingsReqRest",
            "required":[
               "robot_list"
            ],
            "type":"object",
            "properties":{
               "robot_list":{
                  "title":"Robot List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "AgentGetSettingsRspListRest":{
            "title":"AgentGetSettingsRspListRest",
            "required":[
               "agent_settings"
            ],
            "type":"object",
            "properties":{
               "agent_settings":{
                  "title":"Agent Settings",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/AgentGetSettingsRspRest"
                  }
               }
            }
         },
         "AgentGetSettingsRspRest":{
            "title":"AgentGetSettingsRspRest",
            "required":[
               "robot_id",
               "wifi",
               "nav_conf"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "wifi":{
                  "title":"Wifi",
                  "type":"string"
               },
               "nav_conf":{
                  "title":"Nav Conf",
                  "type":"string"
               }
            }
         },
         "AgentGetSwUpdateStatusReqRest":{
            "title":"AgentGetSwUpdateStatusReqRest",
            "required":[
               "robot_list"
            ],
            "type":"object",
            "properties":{
               "robot_list":{
                  "title":"Robot List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "AgentGetSwUpdateStatusRspListRest":{
            "title":"AgentGetSwUpdateStatusRspListRest",
            "required":[
               "agent_sw_update_status"
            ],
            "type":"object",
            "properties":{
               "agent_sw_update_status":{
                  "title":"Agent Sw Update Status",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/AgentGetSwUpdateStatusRspRest"
                  }
               }
            }
         },
         "AgentGetSwUpdateStatusRspRest":{
            "title":"AgentGetSwUpdateStatusRspRest",
            "required":[
               "robot_id",
               "sw_update_status"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "sw_update_status":{
                  "title":"Sw Update Status",
                  "type":"string"
               }
            }
         },
         "AgentGetSwVersionReqRest":{
            "title":"AgentGetSwVersionReqRest",
            "required":[
               "robot_list"
            ],
            "type":"object",
            "properties":{
               "robot_list":{
                  "title":"Robot List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "AgentGetSwVersionRspListRest":{
            "title":"AgentGetSwVersionRspListRest",
            "required":[
               "agent_sw_version"
            ],
            "type":"object",
            "properties":{
               "agent_sw_version":{
                  "title":"Agent Sw Version",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/AgentGetSwVersionRspRest"
                  }
               }
            }
         },
         "AgentGetSwVersionRspRest":{
            "title":"AgentGetSwVersionRspRest",
            "required":[
               "robot_id",
               "sw_version"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "sw_version":{
                  "title":"Sw Version",
                  "type":"string"
               }
            }
         },
         "AgentOtaAvailRest":{
            "title":"AgentOtaAvailRest",
            "required":[
               "far_app",
               "far_env",
               "ipc",
               "vcu"
            ],
            "type":"object",
            "properties":{
               "far_app":{
                  "title":"Far App",
                  "type":"string"
               },
               "far_env":{
                  "title":"Far Env",
                  "type":"string"
               },
               "ipc":{
                  "title":"Ipc",
                  "type":"string"
               },
               "vcu":{
                  "title":"Vcu",
                  "type":"string"
               }
            }
         },
         "AgentSetSettingsReqListRest":{
            "title":"AgentSetSettingsReqListRest",
            "required":[
               "robot_list",
               "agent_settings"
            ],
            "type":"object",
            "properties":{
               "robot_list":{
                  "title":"Robot List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               },
               "agent_settings":{
                  "$ref":"#/components/schemas/AgentSetSettingsReqRest"
               }
            }
         },
         "AgentSetSettingsReqRest":{
            "title":"AgentSetSettingsReqRest",
            "required":[
               "wifi",
               "nav_conf"
            ],
            "type":"object",
            "properties":{
               "wifi":{
                  "title":"Wifi",
                  "type":"string"
               },
               "nav_conf":{
                  "title":"Nav Conf",
                  "type":"string"
               }
            }
         },
         "AgentUpdateSwReqListRest":{
            "title":"AgentUpdateSwReqListRest",
            "required":[
               "robot_list",
               "agent_sw_version"
            ],
            "type":"object",
            "properties":{
               "robot_list":{
                  "title":"Robot List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               },
               "agent_sw_version":{
                  "title":"Agent Sw Version",
                  "type":"string"
               }
            }
         },
         "ArtifactAction":{
            "title":"ArtifactAction",
            "enum":[
               "pause",
               "resume"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "ArtifactActionResultRest":{
            "title":"ArtifactActionResultRest",
            "required":[
               "service",
               "request_id",
               "action"
            ],
            "type":"object",
            "properties":{
               "service":{
                  "title":"Service",
                  "type":"string"
               },
               "request_id":{
                  "title":"Request Id",
                  "type":"string"
               },
               "action":{
                  "title":"Action",
                  "type":"string"
               }
            }
         },
         "ArtifactBuildResult":{
            "title":"ArtifactBuildResult",
            "required":[
               "wrapper_name",
               "wrapper_id",
               "wrapper_type",
               "category",
               "env_version",
               "build_time",
               "build_result",
               "debug_msg"
            ],
            "type":"object",
            "properties":{
               "wrapper_name":{
                  "title":"Wrapper Name",
                  "type":"string"
               },
               "wrapper_id":{
                  "title":"Wrapper Id",
                  "type":"string"
               },
               "wrapper_type":{
                  "title":"Wrapper Type",
                  "type":"string"
               },
               "category":{
                  "title":"Category",
                  "type":"string"
               },
               "env_version":{
                  "title":"Env Version",
                  "type":"string"
               },
               "build_time":{
                  "title":"Build Time",
                  "type":"string"
               },
               "build_result":{
                  "title":"Build Result",
                  "type":"string"
               },
               "debug_msg":{
                  "title":"Debug Msg",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "ArtifactGetSettingsReqRest":{
            "title":"ArtifactGetSettingsReqRest",
            "required":[
               "artifact_list"
            ],
            "type":"object",
            "properties":{
               "artifact_list":{
                  "title":"Artifact List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "ArtifactGetSettingsRspListRest":{
            "title":"ArtifactGetSettingsRspListRest",
            "required":[
               "artifact_settings"
            ],
            "type":"object",
            "properties":{
               "artifact_settings":{
                  "title":"Artifact Settings",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ArtifactGetSettingsRspRest"
                  }
               }
            }
         },
         "ArtifactGetSettingsRspRest":{
            "title":"ArtifactGetSettingsRspRest",
            "required":[
               "artifact_id",
               "artifact_conf"
            ],
            "type":"object",
            "properties":{
               "artifact_id":{
                  "title":"Artifact Id",
                  "type":"string"
               },
               "artifact_conf":{
                  "title":"Artifact Conf",
                  "type":"string"
               }
            }
         },
         "ArtifactGetSwUpdateStatusReqRest":{
            "title":"ArtifactGetSwUpdateStatusReqRest",
            "required":[
               "artifact_list"
            ],
            "type":"object",
            "properties":{
               "artifact_list":{
                  "title":"Artifact List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "ArtifactGetSwUpdateStatusRspRest":{
            "title":"ArtifactGetSwUpdateStatusRspRest",
            "required":[
               "artifact_id",
               "sw_update_status"
            ],
            "type":"object",
            "properties":{
               "artifact_id":{
                  "title":"Artifact Id",
                  "type":"string"
               },
               "sw_update_status":{
                  "title":"Sw Update Status",
                  "type":"string"
               }
            }
         },
         "ArtifactInfoRest":{
            "title":"ArtifactInfoRest",
            "required":[
               "id",
               "name",
               "conf_info",
               "service",
               "state",
               "last_update_time"
            ],
            "type":"object",
            "properties":{
               "id":{
                  "title":"Id",
                  "type":"string"
               },
               "name":{
                  "title":"Name",
                  "type":"string"
               },
               "conf_info":{
                  "title":"Conf Info",
                  "type":"object"
               },
               "service":{
                  "title":"Service",
                  "type":"object"
               },
               "state":{
                  "title":"State",
                  "type":"object"
               },
               "last_update_time":{
                  "title":"Last Update Time",
                  "type":"number"
               }
            }
         },
         "ArtifactInfoWithConnectionRest":{
            "title":"ArtifactInfoWithConnectionRest",
            "required":[
               "id",
               "name",
               "conf_info",
               "service",
               "fleet_name",
               "state",
               "connection_status",
               "last_update_time"
            ],
            "type":"object",
            "properties":{
               "id":{
                  "title":"Id",
                  "type":"string"
               },
               "name":{
                  "title":"Name",
                  "type":"string"
               },
               "conf_info":{
                  "title":"Conf Info",
                  "type":"object"
               },
               "service":{
                  "title":"Service",
                  "type":"object"
               },
               "fleet_name":{
                  "title":"Fleet Name",
                  "type":"string"
               },
               "state":{
                  "title":"State",
                  "type":"object"
               },
               "connection_status":{
                  "title":"Connection Status",
                  "type":"integer"
               },
               "last_update_time":{
                  "title":"Last Update Time",
                  "type":"number"
               }
            }
         },
         "ArtifactList":{
            "title":"ArtifactList",
            "required":[
               "artifact_list"
            ],
            "type":"object",
            "properties":{
               "artifact_list":{
                  "title":"Artifact List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "ArtifactLogLevel":{
            "title":"ArtifactLogLevel",
            "enum":[
               "wrapper",
               "comm",
               "system"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "ArtifactName":{
            "title":"ArtifactName",
            "required":[
               "artifact_id",
               "artifact_type"
            ],
            "type":"object",
            "properties":{
               "artifact_id":{
                  "title":"Artifact Id",
                  "type":"string"
               },
               "artifact_type":{
                  "title":"Artifact Type",
                  "type":"string"
               }
            }
         },
         "ArtifactRequestBeauty":{
            "title":"ArtifactRequestBeauty",
            "required":[
               "request_id",
               "status",
               "message"
            ],
            "type":"object",
            "properties":{
               "request_id":{
                  "title":"Request Id",
                  "type":"string"
               },
               "status":{
                  "title":"Status",
                  "type":"string"
               },
               "message":{
                  "title":"Message",
                  "type":"string"
               }
            }
         },
         "ArtifactRequestRest":{
            "title":"ArtifactRequestRest",
            "required":[
               "service",
               "parameters"
            ],
            "type":"object",
            "properties":{
               "service":{
                  "title":"Service",
                  "type":"string"
               },
               "parameters":{
                  "title":"Parameters",
                  "type":"object"
               }
            }
         },
         "ArtifactRequestResultRest":{
            "title":"ArtifactRequestResultRest",
            "required":[
               "service",
               "request_id"
            ],
            "type":"object",
            "properties":{
               "service":{
                  "title":"Service",
                  "type":"string"
               },
               "request_id":{
                  "title":"Request Id",
                  "type":"string"
               }
            }
         },
         "ArtifactRequestStatus":{
            "title":"ArtifactRequestStatus",
            "required":[
               "service",
               "requests"
            ],
            "type":"object",
            "properties":{
               "service":{
                  "title":"Service",
                  "type":"string"
               },
               "requests":{
                  "title":"Requests",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ArtifactRequestBeauty"
                  }
               }
            }
         },
         "ArtifactRequestStatusRest":{
            "title":"ArtifactRequestStatusRest",
            "required":[
               "services"
            ],
            "type":"object",
            "properties":{
               "services":{
                  "title":"Services",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ArtifactRequestStatus"
                  }
               }
            }
         },
         "ArtifactRuntimeLogRest":{
            "title":"ArtifactRuntimeLogRest",
            "required":[
               "runtime_log"
            ],
            "type":"object",
            "properties":{
               "runtime_log":{
                  "title":"Runtime Log",
                  "type":"object"
               }
            }
         },
         "ArtifactSetSettingsReqListRest":{
            "title":"ArtifactSetSettingsReqListRest",
            "required":[
               "artifact_list",
               "artifact_settings"
            ],
            "type":"object",
            "properties":{
               "artifact_list":{
                  "title":"Artifact List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               },
               "artifact_settings":{
                  "$ref":"#/components/schemas/ArtifactSetSettingsReqRest"
               }
            }
         },
         "ArtifactSetSettingsReqRest":{
            "title":"ArtifactSetSettingsReqRest",
            "required":[
               "artifact_conf"
            ],
            "type":"object",
            "properties":{
               "artifact_conf":{
                  "title":"Artifact Conf",
                  "type":"string"
               }
            }
         },
         "ArtifactSetting":{
            "title":"ArtifactSetting",
            "required":[
               "external",
               "agent"
            ],
            "type":"object",
            "properties":{
               "external":{
                  "title":"External",
                  "type":"array",
                  "items":{
                     
                  }
               },
               "agent":{
                  "title":"Agent",
                  "type":"array",
                  "items":{
                     
                  }
               }
            }
         },
         "ArtifactSimType":{
            "title":"ArtifactSimType",
            "enum":[
               "false",
               "true",
               "unity",
               "gazebo",
               "rviz"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "ArtifactStateRest":{
            "title":"ArtifactStateRest",
            "required":[
               "artifacts"
            ],
            "type":"object",
            "properties":{
               "artifacts":{
                  "title":"Artifacts",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ArtifactInfoRest"
                  }
               }
            }
         },
         "ArtifactStatusMode":{
            "title":"ArtifactStatusMode",
            "enum":[
               "service_only",
               "state_only"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "ArtifactTypeMeta":{
            "title":"ArtifactTypeMeta",
            "required":[
               "own_by_user",
               "own_by_sc"
            ],
            "type":"object",
            "properties":{
               "own_by_user":{
                  "title":"Own By User",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/UserTypeMeta"
                  }
               },
               "own_by_sc":{
                  "title":"Own By Sc",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "ArtifactUpdateSwReqListRest":{
            "title":"ArtifactUpdateSwReqListRest",
            "required":[
               "artifact_list",
               "artifact_sw_version"
            ],
            "type":"object",
            "properties":{
               "artifact_list":{
                  "title":"Artifact List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               },
               "artifact_sw_version":{
                  "title":"Artifact Sw Version",
                  "type":"string"
               }
            }
         },
         "Auth":{
            "title":"Auth",
            "enum":[
               "admin",
               "general"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "Body_add_new_map_v2_maps__map_name__post":{
            "title":"Body_add_new_map_v2_maps__map_name__post",
            "required":[
               "map_image_data",
               "map_info_data"
            ],
            "type":"object",
            "properties":{
               "map_image_data":{
                  "title":"Map Image Data",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/MapRawRest"
                     }
                  ],
                  "description":"base64 data string [png]"
               },
               "map_info_data":{
                  "title":"Map Info Data",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/MapInfoRest"
                     }
                  ],
                  "description":"info data for map description"
               }
            }
         },
         "Body_import_artifact_wrapper_package_v2_sdk_artifact_wrapper_package_put":{
            "title":"Body_import_artifact_wrapper_package_v2_sdk_artifact_wrapper_package_put",
            "required":[
               "wrapper_pkg"
            ],
            "type":"object",
            "properties":{
               "wrapper_pkg":{
                  "title":"Wrapper Pkg",
                  "type":"string",
                  "description":"**.tar.gz** only",
                  "format":"binary"
               }
            }
         },
         "Body_import_settings_of_swarm_core_v2_settings_core_setting_package_put":{
            "title":"Body_import_settings_of_swarm_core_v2_settings_core_setting_package_put",
            "required":[
               "core_settings"
            ],
            "type":"object",
            "properties":{
               "core_settings":{
                  "title":"Core Settings",
                  "type":"string",
                  "description":"**.tar.gz** only",
                  "format":"binary"
               }
            }
         },
         "Body_login_for_access_token_login_access_token_post":{
            "title":"Body_login_for_access_token_login_access_token_post",
            "required":[
               "username",
               "password"
            ],
            "type":"object",
            "properties":{
               "grant_type":{
                  "title":"Grant Type",
                  "pattern":"password",
                  "type":"string"
               },
               "username":{
                  "title":"Username",
                  "type":"string"
               },
               "password":{
                  "title":"Password",
                  "type":"string"
               },
               "scope":{
                  "title":"Scope",
                  "type":"string",
                  "default":""
               },
               "client_id":{
                  "title":"Client Id",
                  "type":"string"
               },
               "client_secret":{
                  "title":"Client Secret",
                  "type":"string"
               }
            }
         },
         "Body_update_license_v2_license_new_license_put":{
            "title":"Body_update_license_v2_license_new_license_put",
            "required":[
               "new_license"
            ],
            "type":"object",
            "properties":{
               "new_license":{
                  "title":"New License",
                  "type":"string",
                  "description":"**license.lic** only",
                  "format":"binary"
               }
            }
         },
         "Body_update_map_details_v2_maps__map_name__put":{
            "title":"Body_update_map_details_v2_maps__map_name__put",
            "type":"object",
            "properties":{
               "new_map_image_data":{
                  "title":"New Map Image Data",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/MapRawRest"
                     }
                  ],
                  "description":"base64 data string [png]"
               },
               "new_map_info_data":{
                  "title":"New Map Info Data",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/MapInfoRest"
                     }
                  ],
                  "description":"info data for map description"
               }
            }
         },
         "Category":{
            "title":"Category",
            "enum":[
               "Required",
               "Preferred"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "CellIdentity":{
            "title":"CellIdentity",
            "required":[
               "area",
               "cell_id"
            ],
            "type":"object",
            "properties":{
               "area":{
                  "title":"Area",
                  "type":"string"
               },
               "cell_id":{
                  "title":"Cell Id",
                  "type":"string"
               }
            }
         },
         "CellRequest":{
            "title":"CellRequest",
            "required":[
               "area",
               "cell_id",
               "cell_coordinate",
               "direction",
               "length",
               "type",
               "typeName",
               "width"
            ],
            "type":"object",
            "properties":{
               "area":{
                  "title":"Area",
                  "type":"string"
               },
               "cell_id":{
                  "title":"Cell Id",
                  "type":"string"
               },
               "cell_coordinate":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__Pose2D"
               },
               "direction":{
                  "title":"Direction",
                  "type":"string"
               },
               "length":{
                  "title":"Length",
                  "type":"integer"
               },
               "type":{
                  "title":"Type",
                  "type":"string"
               },
               "typeName":{
                  "title":"Typename",
                  "type":"string"
               },
               "width":{
                  "title":"Width",
                  "type":"integer"
               }
            }
         },
         "CellUpdate":{
            "title":"CellUpdate",
            "required":[
               "area",
               "cell_id"
            ],
            "type":"object",
            "properties":{
               "area":{
                  "title":"Area",
                  "type":"string"
               },
               "cell_id":{
                  "title":"Cell Id",
                  "type":"string"
               },
               "cell_coordinate":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__Pose2D"
               },
               "cell_size":{
                  "$ref":"#/components/schemas/Position2D"
               },
               "direction":{
                  "title":"Direction",
                  "type":"string"
               },
               "function_type":{
                  "title":"Function Type",
                  "type":"string"
               },
               "length":{
                  "title":"Length",
                  "type":"integer"
               },
               "marker_offset":{
                  "$ref":"#/components/schemas/Position2D"
               },
               "markers":{
                  "title":"Markers",
                  "type":"string"
               },
               "type":{
                  "title":"Type",
                  "type":"string"
               },
               "typeName":{
                  "title":"Typename",
                  "type":"string"
               },
               "width":{
                  "title":"Width",
                  "type":"integer"
               }
            }
         },
         "CellUpdateRest":{
            "title":"CellUpdateRest",
            "type":"object",
            "properties":{
               "add":{
                  "title":"Add",
                  "anyOf":[
                     {
                        "type":"array",
                        "items":{
                           "$ref":"#/components/schemas/NewCellRequest"
                        }
                     },
                     {
                        "type":"array",
                        "items":{
                           "$ref":"#/components/schemas/CellRequest"
                        }
                     }
                  ]
               },
               "update":{
                  "title":"Update",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CellUpdate"
                  }
               },
               "remove":{
                  "title":"Remove",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CellIdentity"
                  }
               },
               "override":{
                  "title":"Override",
                  "type":"object"
               }
            }
         },
         "CoreEnvListRest":{
            "title":"CoreEnvListRest",
            "required":[
               "core_env_list"
            ],
            "type":"object",
            "properties":{
               "core_env_list":{
                  "title":"Core Env List",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__SwRest"
                  }
               }
            }
         },
         "CoreEnvUpdateStatusRest":{
            "title":"CoreEnvUpdateStatusRest",
            "required":[
               "swarm_core_env_update_status"
            ],
            "type":"object",
            "properties":{
               "swarm_core_env_update_status":{
                  "title":"Swarm Core Env Update Status",
                  "type":"string"
               }
            }
         },
         "CoreEnvVersionRest":{
            "title":"CoreEnvVersionRest",
            "required":[
               "swarm_core_env_version"
            ],
            "type":"object",
            "properties":{
               "swarm_core_env_version":{
                  "title":"Swarm Core Env Version",
                  "type":"string"
               }
            }
         },
         "CoreMetadatasRest":{
            "title":"CoreMetadatasRest",
            "required":[
               "core_metadata"
            ],
            "type":"object",
            "properties":{
               "core_metadata":{
                  "title":"Core Metadata",
                  "type":"string"
               }
            }
         },
         "CoreSwUpdateStatusRest":{
            "title":"CoreSwUpdateStatusRest",
            "required":[
               "core_sw_update_status"
            ],
            "type":"object",
            "properties":{
               "core_sw_update_status":{
                  "title":"Core Sw Update Status",
                  "type":"string"
               }
            }
         },
         "CoreSwVersionRest":{
            "title":"CoreSwVersionRest",
            "required":[
               "core_sw_version"
            ],
            "type":"object",
            "properties":{
               "core_sw_version":{
                  "title":"Core Sw Version",
                  "type":"string"
               }
            }
         },
         "CreateWrapperResult":{
            "title":"CreateWrapperResult",
            "required":[
               "wrapper_name",
               "wrapper_id",
               "wrapper_type",
               "inherit_from_template",
               "category"
            ],
            "type":"object",
            "properties":{
               "wrapper_name":{
                  "title":"Wrapper Name",
                  "type":"string"
               },
               "wrapper_id":{
                  "title":"Wrapper Id",
                  "type":"string"
               },
               "wrapper_type":{
                  "title":"Wrapper Type",
                  "type":"string"
               },
               "inherit_from_template":{
                  "title":"Inherit From Template",
                  "type":"string"
               },
               "category":{
                  "title":"Category",
                  "type":"string"
               }
            }
         },
         "DeleteWrapperResult":{
            "title":"DeleteWrapperResult",
            "required":[
               "deleted_wrapper_name",
               "deleted_wrapper_id"
            ],
            "type":"object",
            "properties":{
               "deleted_wrapper_name":{
                  "title":"Deleted Wrapper Name",
                  "type":"string"
               },
               "deleted_wrapper_id":{
                  "title":"Deleted Wrapper Id",
                  "type":"string"
               }
            }
         },
         "DeployCandidateResult":{
            "title":"DeployCandidateResult",
            "required":[
               "wrapper_name",
               "wrapper_id",
               "wrapper_type",
               "category",
               "candidate"
            ],
            "type":"object",
            "properties":{
               "wrapper_name":{
                  "title":"Wrapper Name",
                  "type":"string"
               },
               "wrapper_id":{
                  "title":"Wrapper Id",
                  "type":"string"
               },
               "wrapper_type":{
                  "title":"Wrapper Type",
                  "type":"string"
               },
               "category":{
                  "title":"Category",
                  "type":"string"
               },
               "candidate":{
                  "title":"Candidate",
                  "type":"array",
                  "items":{
                     
                  }
               }
            }
         },
         "DeployWrapperInfo":{
            "title":"DeployWrapperInfo",
            "required":[
               "wrapper_name",
               "wrapper_id",
               "wrapper_type",
               "category",
               "env_version",
               "build_time"
            ],
            "type":"object",
            "properties":{
               "wrapper_name":{
                  "title":"Wrapper Name",
                  "type":"string"
               },
               "wrapper_id":{
                  "title":"Wrapper Id",
                  "type":"string"
               },
               "wrapper_type":{
                  "title":"Wrapper Type",
                  "type":"string"
               },
               "category":{
                  "title":"Category",
                  "type":"string"
               },
               "env_version":{
                  "title":"Env Version",
                  "type":"string"
               },
               "build_time":{
                  "title":"Build Time",
                  "type":"string"
               }
            }
         },
         "DeployWrapperResult":{
            "title":"DeployWrapperResult",
            "required":[
               "deploy_artifact_id",
               "deploy_result",
               "deploy_msg",
               "bind_robot_id",
               "bind_result",
               "bind_msg"
            ],
            "type":"object",
            "properties":{
               "deploy_artifact_id":{
                  "title":"Deploy Artifact Id",
                  "type":"string"
               },
               "deploy_result":{
                  "title":"Deploy Result",
                  "type":"string"
               },
               "deploy_msg":{
                  "title":"Deploy Msg",
                  "type":"string"
               },
               "bind_robot_id":{
                  "title":"Bind Robot Id",
                  "type":"string"
               },
               "bind_result":{
                  "title":"Bind Result",
                  "type":"string"
               },
               "bind_msg":{
                  "title":"Bind Msg",
                  "type":"string"
               }
            }
         },
         "DeployWrapperSummary":{
            "title":"DeployWrapperSummary",
            "required":[
               "wrapper_info",
               "result"
            ],
            "type":"object",
            "properties":{
               "wrapper_info":{
                  "$ref":"#/components/schemas/DeployWrapperInfo"
               },
               "result":{
                  "title":"Result",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/DeployWrapperResult"
                  }
               }
            }
         },
         "ExportLogProgress":{
            "title":"ExportLogProgress",
            "required":[
               "packageName",
               "precent"
            ],
            "type":"object",
            "properties":{
               "packageName":{
                  "title":"Packagename",
                  "type":"string"
               },
               "precent":{
                  "title":"Precent",
                  "type":"integer"
               }
            }
         },
         "FleetSettings":{
            "title":"FleetSettings",
            "required":[
               "agents",
               "artifacts",
               "maps",
               "roles",
               "flows"
            ],
            "type":"object",
            "properties":{
               "agents":{
                  "title":"Agents",
                  "type":"array",
                  "items":{
                     
                  }
               },
               "artifacts":{
                  "$ref":"#/components/schemas/ArtifactSetting"
               },
               "maps":{
                  "title":"Maps",
                  "type":"array",
                  "items":{
                     
                  }
               },
               "roles":{
                  "title":"Roles",
                  "type":"array",
                  "items":{
                     
                  }
               },
               "flows":{
                  "title":"Flows",
                  "type":"array",
                  "items":{
                     
                  }
               }
            }
         },
         "FleetStateMode":{
            "title":"FleetStateMode",
            "enum":[
               "all",
               "agent_only",
               "artifact_only",
               "position_only"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "FlowDetailRest":{
            "title":"FlowDetailRest",
            "required":[
               "flow_id",
               "flow_name",
               "fleet_name",
               "state",
               "status",
               "complete_percent",
               "timer_scheduled",
               "scheduled_time",
               "tasks"
            ],
            "type":"object",
            "properties":{
               "flow_id":{
                  "title":"Flow Id",
                  "type":"string"
               },
               "flow_name":{
                  "title":"Flow Name",
                  "type":"string"
               },
               "fleet_name":{
                  "title":"Fleet Name",
                  "type":"string"
               },
               "state":{
                  "title":"State",
                  "type":"integer"
               },
               "status":{
                  "title":"Status",
                  "type":"string"
               },
               "complete_percent":{
                  "title":"Complete Percent",
                  "type":"number"
               },
               "timer_scheduled":{
                  "title":"Timer Scheduled",
                  "type":"boolean"
               },
               "scheduled_time":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TimeRest"
               },
               "tasks":{
                  "title":"Tasks",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/TaskSummary"
                  }
               }
            }
         },
         "FlowListRest":{
            "title":"FlowListRest",
            "required":[
               "system_status_code",
               "system_message",
               "swarm_data"
            ],
            "type":"object",
            "properties":{
               "system_status_code":{
                  "title":"System Status Code",
                  "type":"integer"
               },
               "system_message":{
                  "title":"System Message",
                  "type":"string"
               },
               "swarm_data":{
                  "title":"Swarm Data",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/FlowRest"
                  }
               }
            }
         },
         "FlowParameter":{
            "title":"FlowParameter",
            "required":[
               "flow_name",
               "event",
               "flow_data"
            ],
            "type":"object",
            "properties":{
               "flow_name":{
                  "title":"Flow Name",
                  "type":"string"
               },
               "event":{
                  "title":"Event",
                  "type":"string"
               },
               "flow_data":{
                  "title":"Flow Data",
                  "type":"array",
                  "items":{
                     
                  }
               }
            }
         },
         "FlowParameterRest":{
            "title":"FlowParameterRest",
            "required":[
               "system_status_code",
               "system_message",
               "swarm_data"
            ],
            "type":"object",
            "properties":{
               "system_status_code":{
                  "title":"System Status Code",
                  "type":"integer"
               },
               "system_message":{
                  "title":"System Message",
                  "type":"string"
               },
               "swarm_data":{
                  "$ref":"#/components/schemas/FlowParameter"
               }
            }
         },
         "FlowRequestArgs":{
            "title":"FlowRequestArgs",
            "required":[
               "start_time",
               "end_time",
               "interval",
               "params"
            ],
            "type":"object",
            "properties":{
               "start_time":{
                  "title":"Start Time",
                  "type":"string"
               },
               "end_time":{
                  "title":"End Time",
                  "type":"string"
               },
               "interval":{
                  "title":"Interval",
                  "type":"string"
               },
               "params":{
                  "title":"Params",
                  "type":"object"
               }
            }
         },
         "FlowRequestRest":{
            "title":"FlowRequestRest",
            "required":[
               "args"
            ],
            "type":"object",
            "properties":{
               "args":{
                  "$ref":"#/components/schemas/FlowRequestArgs"
               }
            }
         },
         "FlowRest":{
            "title":"FlowRest",
            "required":[
               "fleet_name",
               "flows"
            ],
            "type":"object",
            "properties":{
               "fleet_name":{
                  "title":"Fleet Name",
                  "type":"string"
               },
               "flows":{
                  "title":"Flows",
                  "type":"array",
                  "items":{
                     
                  }
               }
            }
         },
         "FlowServiceResponse":{
            "title":"FlowServiceResponse",
            "required":[
               "flow_id"
            ],
            "type":"object",
            "properties":{
               "flow_id":{
                  "title":"Flow Id",
                  "type":"string"
               }
            }
         },
         "FlowServiceResponseRest":{
            "title":"FlowServiceResponseRest",
            "required":[
               "system_status_code",
               "system_message"
            ],
            "type":"object",
            "properties":{
               "system_status_code":{
                  "title":"System Status Code",
                  "type":"integer"
               },
               "system_message":{
                  "title":"System Message",
                  "type":"string"
               },
               "swarm_data":{
                  "$ref":"#/components/schemas/FlowServiceResponse"
               }
            }
         },
         "FlowStateRest":{
            "title":"FlowStateRest",
            "required":[
               "system_status_code",
               "system_message",
               "swarm_data"
            ],
            "type":"object",
            "properties":{
               "system_status_code":{
                  "title":"System Status Code",
                  "type":"integer"
               },
               "system_message":{
                  "title":"System Message",
                  "type":"string"
               },
               "swarm_data":{
                  "title":"Swarm Data",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/FlowDetailRest"
                  }
               }
            }
         },
         "GeometryPose":{
            "title":"GeometryPose",
            "required":[
               "position",
               "orientation"
            ],
            "type":"object",
            "properties":{
               "position":{
                  "$ref":"#/components/schemas/Position3D"
               },
               "orientation":{
                  "$ref":"#/components/schemas/Orientation3D"
               }
            }
         },
         "GetWMSMode":{
            "title":"GetWMSMode",
            "enum":[
               "load_only"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "GraphAction":{
            "title":"GraphAction",
            "enum":[
               "add",
               "update",
               "remove"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "GraphListRest":{
            "title":"GraphListRest",
            "required":[
               "graphs"
            ],
            "type":"object",
            "properties":{
               "graphs":{
                  "title":"Graphs",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/GraphRest"
                  }
               }
            }
         },
         "GraphRawRest":{
            "title":"GraphRawRest",
            "required":[
               "content"
            ],
            "type":"object",
            "properties":{
               "content":{
                  "title":"Content",
                  "type":"string"
               }
            }
         },
         "GraphRest":{
            "title":"GraphRest",
            "required":[
               "graph_name",
               "image"
            ],
            "type":"object",
            "properties":{
               "graph_name":{
                  "title":"Graph Name",
                  "type":"string"
               },
               "image":{
                  "title":"Image",
                  "type":"string"
               }
            }
         },
         "HTTPValidationError":{
            "title":"HTTPValidationError",
            "type":"object",
            "properties":{
               "detail":{
                  "title":"Detail",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ValidationError"
                  }
               }
            }
         },
         "ImportWrapperResult":{
            "title":"ImportWrapperResult",
            "required":[
               "imported_wrapper_name",
               "imported_wrapper_id"
            ],
            "type":"object",
            "properties":{
               "imported_wrapper_name":{
                  "title":"Imported Wrapper Name",
                  "type":"string"
               },
               "imported_wrapper_id":{
                  "title":"Imported Wrapper Id",
                  "type":"string"
               }
            }
         },
         "LicenseCheckResultRest":{
            "title":"LicenseCheckResultRest",
            "required":[
               "license_check_result"
            ],
            "type":"object",
            "properties":{
               "license_check_result":{
                  "title":"License Check Result",
                  "type":"string"
               }
            }
         },
         "MapInfoRest":{
            "title":"MapInfoRest",
            "required":[
               "image",
               "mode",
               "resolution",
               "origin_x",
               "origin_y",
               "origin_theta",
               "negate",
               "occupied_thresh",
               "free_thresh"
            ],
            "type":"object",
            "properties":{
               "image":{
                  "title":"Image",
                  "type":"string"
               },
               "mode":{
                  "title":"Mode",
                  "type":"string"
               },
               "resolution":{
                  "title":"Resolution",
                  "type":"number"
               },
               "origin_x":{
                  "title":"Origin X",
                  "type":"number"
               },
               "origin_y":{
                  "title":"Origin Y",
                  "type":"number"
               },
               "origin_theta":{
                  "title":"Origin Theta",
                  "type":"number"
               },
               "negate":{
                  "title":"Negate",
                  "type":"integer"
               },
               "occupied_thresh":{
                  "title":"Occupied Thresh",
                  "type":"number"
               },
               "free_thresh":{
                  "title":"Free Thresh",
                  "type":"number"
               },
               "nav_graph":{
                  "title":"Nav Graph",
                  "type":"string"
               },
               "cell":{
                  "title":"Cell",
                  "type":"string"
               },
               "triton":{
                  "title":"Triton",
                  "type":"string"
               }
            }
         },
         "MapRawRest":{
            "title":"MapRawRest",
            "required":[
               "content"
            ],
            "type":"object",
            "properties":{
               "content":{
                  "title":"Content",
                  "type":"string"
               }
            }
         },
         "MarkerRest":{
            "title":"MarkerRest",
            "required":[
               "ns",
               "robot_id",
               "update_time",
               "points"
            ],
            "type":"object",
            "properties":{
               "ns":{
                  "title":"Ns",
                  "type":"string"
               },
               "robot_id":{
                  "title":"Robot Id",
                  "type":"integer"
               },
               "update_time":{
                  "title":"Update Time",
                  "type":"number"
               },
               "points":{
                  "title":"Points",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Position2D"
                  }
               }
            }
         },
         "NewCellRequest":{
            "title":"NewCellRequest",
            "required":[
               "area",
               "cell_id",
               "cell_coordinate",
               "cell_size",
               "direction",
               "function_type",
               "length",
               "marker_offset",
               "markers",
               "type",
               "typeName",
               "width"
            ],
            "type":"object",
            "properties":{
               "area":{
                  "title":"Area",
                  "type":"string"
               },
               "cell_id":{
                  "title":"Cell Id",
                  "type":"string"
               },
               "cell_coordinate":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__Pose2D"
               },
               "cell_size":{
                  "$ref":"#/components/schemas/Position2D"
               },
               "direction":{
                  "title":"Direction",
                  "type":"string"
               },
               "function_type":{
                  "title":"Function Type",
                  "type":"string"
               },
               "length":{
                  "title":"Length",
                  "type":"integer"
               },
               "marker_offset":{
                  "$ref":"#/components/schemas/Position2D"
               },
               "markers":{
                  "title":"Markers",
                  "type":"string"
               },
               "type":{
                  "title":"Type",
                  "type":"string"
               },
               "typeName":{
                  "title":"Typename",
                  "type":"string"
               },
               "width":{
                  "title":"Width",
                  "type":"integer"
               }
            }
         },
         "NewWmsCellRest":{
            "title":"NewWmsCellRest",
            "required":[
               "updater_id",
               "area_id",
               "cell_id",
               "map",
               "pose",
               "direction",
               "function_type",
               "markers",
               "markers_offset",
               "status",
               "load",
               "cell_size"
            ],
            "type":"object",
            "properties":{
               "updater_id":{
                  "title":"Updater Id",
                  "type":"string"
               },
               "area_id":{
                  "title":"Area Id",
                  "type":"string"
               },
               "cell_id":{
                  "title":"Cell Id",
                  "type":"string"
               },
               "map":{
                  "title":"Map",
                  "type":"string"
               },
               "pose":{
                  "$ref":"#/components/schemas/GeometryPose"
               },
               "direction":{
                  "title":"Direction",
                  "type":"string"
               },
               "function_type":{
                  "title":"Function Type",
                  "type":"object"
               },
               "markers":{
                  "title":"Markers",
                  "type":"string"
               },
               "markers_offset":{
                  "$ref":"#/components/schemas/Position2D"
               },
               "status":{
                  "title":"Status",
                  "type":"string"
               },
               "load":{
                  "title":"Load",
                  "type":"string"
               },
               "cell_size":{
                  "$ref":"#/components/schemas/Position2D"
               }
            }
         },
         "NewWmsCellsListRest":{
            "title":"NewWmsCellsListRest",
            "required":[
               "cells"
            ],
            "type":"object",
            "properties":{
               "cells":{
                  "title":"Cells",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/NewWmsCellRest"
                  }
               }
            }
         },
         "OneFleetStateRest":{
            "title":"OneFleetStateRest",
            "required":[
               "fleet_name",
               "robots",
               "artifacts"
            ],
            "type":"object",
            "properties":{
               "fleet_name":{
                  "title":"Fleet Name",
                  "type":"string"
               },
               "robots":{
                  "title":"Robots",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__RobotStateRest"
                  }
               },
               "artifacts":{
                  "title":"Artifacts",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ArtifactInfoWithConnectionRest"
                  }
               }
            }
         },
         "OptionalFleetSettings":{
            "title":"OptionalFleetSettings",
            "type":"object",
            "properties":{
               "agents":{
                  "title":"Agents",
                  "type":"array",
                  "items":{
                     
                  }
               },
               "artifacts":{
                  "$ref":"#/components/schemas/ArtifactSetting"
               },
               "maps":{
                  "title":"Maps",
                  "type":"array",
                  "items":{
                     
                  }
               },
               "roles":{
                  "title":"Roles",
                  "type":"array",
                  "items":{
                     
                  }
               },
               "flows":{
                  "title":"Flows",
                  "type":"array",
                  "items":{
                     
                  }
               }
            }
         },
         "Orientation3D":{
            "title":"Orientation3D",
            "required":[
               "x",
               "y",
               "z",
               "w"
            ],
            "type":"object",
            "properties":{
               "x":{
                  "title":"X",
                  "type":"number"
               },
               "y":{
                  "title":"Y",
                  "type":"number"
               },
               "z":{
                  "title":"Z",
                  "type":"number"
               },
               "w":{
                  "title":"W",
                  "type":"number"
               }
            }
         },
         "OtaStatusRest":{
            "title":"OtaStatusRest",
            "required":[
               "ota_status",
               "ota_target_version"
            ],
            "type":"object",
            "properties":{
               "ota_status":{
                  "title":"Ota Status",
                  "type":"string"
               },
               "ota_target_version":{
                  "title":"Ota Target Version",
                  "type":"string"
               }
            }
         },
         "OtaUpdateRest":{
            "title":"OtaUpdateRest",
            "required":[
               "ota_result"
            ],
            "type":"object",
            "properties":{
               "ota_result":{
                  "title":"Ota Result",
                  "type":"string"
               }
            }
         },
         "Perception":{
            "title":"Perception",
            "enum":[
               "LiDAR",
               "Empty"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "Position2D":{
            "title":"Position2D",
            "required":[
               "x",
               "y"
            ],
            "type":"object",
            "properties":{
               "x":{
                  "title":"X",
                  "type":"number"
               },
               "y":{
                  "title":"Y",
                  "type":"number"
               }
            }
         },
         "Position3D":{
            "title":"Position3D",
            "required":[
               "x",
               "y",
               "z"
            ],
            "type":"object",
            "properties":{
               "x":{
                  "title":"X",
                  "type":"number"
               },
               "y":{
                  "title":"Y",
                  "type":"number"
               },
               "z":{
                  "title":"Z",
                  "type":"number"
               }
            }
         },
         "ReadWrapperResult":{
            "title":"ReadWrapperResult",
            "required":[
               "wrapper_name",
               "wrapper_id",
               "wrapper_type",
               "category",
               "build_env",
               "build_time",
               "build_result",
               "live_info",
               "configuration",
               "description",
               "thumbnail"
            ],
            "type":"object",
            "properties":{
               "wrapper_name":{
                  "title":"Wrapper Name",
                  "type":"string"
               },
               "wrapper_id":{
                  "title":"Wrapper Id",
                  "type":"string"
               },
               "wrapper_type":{
                  "title":"Wrapper Type",
                  "type":"string"
               },
               "category":{
                  "title":"Category",
                  "type":"string"
               },
               "build_env":{
                  "title":"Build Env",
                  "type":"string"
               },
               "build_time":{
                  "title":"Build Time",
                  "type":"string"
               },
               "build_result":{
                  "title":"Build Result",
                  "type":"string"
               },
               "services":{
                  "title":"Services",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/WrapperService"
                  }
               },
               "live_info":{
                  "title":"Live Info",
                  "type":"object"
               },
               "configuration":{
                  "title":"Configuration",
                  "type":"object"
               },
               "description":{
                  "title":"Description",
                  "type":"object"
               },
               "thumbnail":{
                  "title":"Thumbnail",
                  "type":"string"
               }
            }
         },
         "RemoveTaskIdRest":{
            "title":"RemoveTaskIdRest",
            "required":[
               "system_status_code",
               "system_message",
               "swarm_data"
            ],
            "type":"object",
            "properties":{
               "system_status_code":{
                  "title":"System Status Code",
                  "type":"integer"
               },
               "system_message":{
                  "title":"System Message",
                  "type":"string"
               },
               "swarm_data":{
                  "title":"Swarm Data",
                  "type":"object"
               }
            }
         },
         "ReturnResultRest":{
            "title":"ReturnResultRest",
            "required":[
               "result"
            ],
            "type":"object",
            "properties":{
               "result":{
                  "title":"Result",
                  "type":"string"
               }
            }
         },
         "RobotCapbility":{
            "title":"RobotCapbility",
            "required":[
               "robot_id",
               "robot_name",
               "model",
               "ip",
               "artifacts"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "robot_name":{
                  "title":"Robot Name",
                  "type":"string"
               },
               "model":{
                  "title":"Model",
                  "type":"string"
               },
               "ip":{
                  "title":"Ip",
                  "type":"string"
               },
               "artifacts":{
                  "title":"Artifacts",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ArtifactName"
                  }
               }
            }
         },
         "RobotCapbilityResult":{
            "title":"RobotCapbilityResult",
            "required":[
               "robots"
            ],
            "type":"object",
            "properties":{
               "robots":{
                  "title":"Robots",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/RobotCapbility"
                  }
               }
            }
         },
         "RobotList":{
            "title":"RobotList",
            "required":[
               "robot_list"
            ],
            "type":"object",
            "properties":{
               "robot_list":{
                  "title":"Robot List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "RobotStateWithoutConnectState":{
            "title":"RobotStateWithoutConnectState",
            "required":[
               "robot_id",
               "robot_name",
               "model",
               "task_id",
               "mode",
               "battery_percent",
               "velocity",
               "map",
               "location",
               "customized_info",
               "mileage",
               "role",
               "fleet_name",
               "capability",
               "last_update_time"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "robot_name":{
                  "title":"Robot Name",
                  "type":"string"
               },
               "model":{
                  "title":"Model",
                  "type":"string"
               },
               "task_id":{
                  "title":"Task Id",
                  "type":"string"
               },
               "mode":{
                  "title":"Mode",
                  "type":"integer"
               },
               "battery_percent":{
                  "title":"Battery Percent",
                  "type":"number"
               },
               "velocity":{
                  "title":"Velocity",
                  "type":"number"
               },
               "map":{
                  "title":"Map",
                  "type":"string"
               },
               "location":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__LocationRest"
               },
               "customized_info":{
                  "title":"Customized Info",
                  "type":"string"
               },
               "mileage":{
                  "title":"Mileage",
                  "type":"number"
               },
               "role":{
                  "title":"Role",
                  "type":"string"
               },
               "fleet_name":{
                  "title":"Fleet Name",
                  "type":"string"
               },
               "capability":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__CapabilityRest"
               },
               "last_update_time":{
                  "title":"Last Update Time",
                  "type":"number"
               }
            }
         },
         "RobotsStateRest":{
            "title":"RobotsStateRest",
            "required":[
               "robots"
            ],
            "type":"object",
            "properties":{
               "robots":{
                  "title":"Robots",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/RobotStateWithoutConnectState"
                  }
               }
            }
         },
         "RoleCapabilityRest":{
            "title":"RoleCapabilityRest",
            "required":[
               "Must",
               "Prefer"
            ],
            "type":"object",
            "properties":{
               "Must":{
                  "$ref":"#/components/schemas/RoleMustCap"
               },
               "Prefer":{
                  "$ref":"#/components/schemas/RolePreferCap"
               }
            }
         },
         "RoleMustCap":{
            "title":"RoleMustCap",
            "required":[
               "payload",
               "artifacts",
               "behavior",
               "perceptions",
               "behaviors"
            ],
            "type":"object",
            "properties":{
               "payload":{
                  "title":"Payload",
                  "type":"integer"
               },
               "artifacts":{
                  "title":"Artifacts",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               },
               "behavior":{
                  "title":"Behavior",
                  "type":"string"
               },
               "perceptions":{
                  "title":"Perceptions",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               },
               "behaviors":{
                  "title":"Behaviors",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "RolePreferCap":{
            "title":"RolePreferCap",
            "required":[
               "speed"
            ],
            "type":"object",
            "properties":{
               "speed":{
                  "title":"Speed",
                  "type":"boolean"
               }
            }
         },
         "RoleRest":{
            "title":"RoleRest",
            "required":[
               "role_name"
            ],
            "type":"object",
            "properties":{
               "role_name":{
                  "title":"Role Name",
                  "type":"string"
               }
            }
         },
         "Size3D":{
            "title":"Size3D",
            "required":[
               "x",
               "y",
               "z"
            ],
            "type":"object",
            "properties":{
               "x":{
                  "title":"X",
                  "type":"integer"
               },
               "y":{
                  "title":"Y",
                  "type":"integer"
               },
               "z":{
                  "title":"Z",
                  "type":"integer"
               }
            }
         },
         "SizeRest":{
            "title":"SizeRest",
            "required":[
               "x",
               "y",
               "z"
            ],
            "type":"object",
            "properties":{
               "x":{
                  "title":"X",
                  "type":"integer"
               },
               "y":{
                  "title":"Y",
                  "type":"integer"
               },
               "z":{
                  "title":"Z",
                  "type":"integer"
               }
            }
         },
         "SwListRest":{
            "title":"SwListRest",
            "required":[
               "core_sw_list",
               "agent_sw_list",
               "artifact_sw_list"
            ],
            "type":"object",
            "properties":{
               "core_sw_list":{
                  "title":"Core Sw List",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__SwRest"
                  }
               },
               "agent_sw_list":{
                  "title":"Agent Sw List",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__SwRest"
                  }
               },
               "artifact_sw_list":{
                  "title":"Artifact Sw List",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__SwRest"
                  }
               }
            }
         },
         "TaskRequestRest":{
            "title":"TaskRequestRest",
            "required":[
               "task_name",
               "role",
               "task_params",
               "priority",
               "robot_id"
            ],
            "type":"object",
            "properties":{
               "task_name":{
                  "title":"Task Name",
                  "type":"string"
               },
               "role":{
                  "title":"Role",
                  "type":"string"
               },
               "task_params":{
                  "title":"Task Params",
                  "type":"string"
               },
               "priority":{
                  "title":"Priority",
                  "type":"integer"
               },
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               }
            }
         },
         "TaskSummary":{
            "title":"TaskSummary",
            "required":[
               "task_id",
               "task_name",
               "task_type",
               "state",
               "priority",
               "robot_id",
               "fleet_name",
               "complete_percent",
               "status_code",
               "status_msg",
               "task_relation",
               "timer_scheduled",
               "schedule_time",
               "submission_time",
               "start_time",
               "end_time"
            ],
            "type":"object",
            "properties":{
               "task_id":{
                  "title":"Task Id",
                  "type":"string"
               },
               "task_name":{
                  "title":"Task Name",
                  "type":"string"
               },
               "task_type":{
                  "title":"Task Type",
                  "type":"string"
               },
               "state":{
                  "title":"State",
                  "type":"integer"
               },
               "priority":{
                  "title":"Priority",
                  "type":"integer"
               },
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "fleet_name":{
                  "title":"Fleet Name",
                  "type":"string"
               },
               "complete_percent":{
                  "title":"Complete Percent",
                  "type":"number"
               },
               "status_code":{
                  "title":"Status Code",
                  "type":"string"
               },
               "status_msg":{
                  "title":"Status Msg",
                  "type":"string"
               },
               "task_relation":{
                  "title":"Task Relation",
                  "type":"string"
               },
               "timer_scheduled":{
                  "title":"Timer Scheduled",
                  "type":"boolean"
               },
               "schedule_time":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TimeRest"
               },
               "submission_time":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TimeRest"
               },
               "start_time":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TimeRest"
               },
               "end_time":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TimeRest"
               }
            }
         },
         "TaskSummaryRest":{
            "title":"TaskSummaryRest",
            "required":[
               "robot_id",
               "task_id",
               "task_name",
               "state",
               "priority",
               "complete_percent",
               "status",
               "role",
               "submission_time",
               "start_time",
               "end_time"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "task_id":{
                  "title":"Task Id",
                  "type":"string"
               },
               "task_name":{
                  "title":"Task Name",
                  "type":"string"
               },
               "state":{
                  "title":"State",
                  "type":"integer"
               },
               "priority":{
                  "title":"Priority",
                  "type":"integer"
               },
               "complete_percent":{
                  "title":"Complete Percent",
                  "type":"number"
               },
               "status":{
                  "title":"Status",
                  "type":"string"
               },
               "role":{
                  "title":"Role",
                  "type":"string"
               },
               "submission_time":{
                  "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__TimeRest"
               },
               "start_time":{
                  "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__TimeRest"
               },
               "end_time":{
                  "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__TimeRest"
               }
            }
         },
         "TimerFlow":{
            "title":"TimerFlow",
            "required":[
               "flow_id",
               "scheduled_time"
            ],
            "type":"object",
            "properties":{
               "flow_id":{
                  "title":"Flow Id",
                  "type":"string"
               },
               "scheduled_time":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TimeRest"
               }
            }
         },
         "TimerFlowStateRest":{
            "title":"TimerFlowStateRest",
            "required":[
               "system_status_code",
               "system_message",
               "swarm_data"
            ],
            "type":"object",
            "properties":{
               "system_status_code":{
                  "title":"System Status Code",
                  "type":"integer"
               },
               "system_message":{
                  "title":"System Message",
                  "type":"string"
               },
               "swarm_data":{
                  "title":"Swarm Data",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/TimerFlowSummary"
                  }
               }
            }
         },
         "TimerFlowSummary":{
            "title":"TimerFlowSummary",
            "required":[
               "flow_id",
               "flow_name",
               "fleet_name",
               "state",
               "status",
               "flows_remain",
               "flows_to_be_generated"
            ],
            "type":"object",
            "properties":{
               "flow_id":{
                  "title":"Flow Id",
                  "type":"string"
               },
               "flow_name":{
                  "title":"Flow Name",
                  "type":"string"
               },
               "fleet_name":{
                  "title":"Fleet Name",
                  "type":"string"
               },
               "state":{
                  "title":"State",
                  "type":"integer"
               },
               "status":{
                  "title":"Status",
                  "type":"string"
               },
               "flows_remain":{
                  "title":"Flows Remain",
                  "type":"integer"
               },
               "flows_to_be_generated":{
                  "title":"Flows To Be Generated",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/TimerFlow"
                  }
               }
            }
         },
         "Token":{
            "title":"Token",
            "required":[
               "access_token",
               "token_type"
            ],
            "type":"object",
            "properties":{
               "access_token":{
                  "title":"Access Token",
                  "type":"string"
               },
               "token_type":{
                  "title":"Token Type",
                  "type":"string"
               }
            }
         },
         "TritonMapListRest":{
            "title":"TritonMapListRest",
            "required":[
               "maps"
            ],
            "type":"object",
            "properties":{
               "maps":{
                  "title":"Maps",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/TritonMapRest"
                  }
               }
            }
         },
         "TritonMapRest":{
            "title":"TritonMapRest",
            "required":[
               "map_name"
            ],
            "type":"object",
            "properties":{
               "map_name":{
                  "title":"Map Name",
                  "type":"string"
               }
            }
         },
         "UpdateVertexRest":{
            "title":"UpdateVertexRest",
            "required":[
               "action",
               "vertices",
               "result"
            ],
            "type":"object",
            "properties":{
               "action":{
                  "title":"Action",
                  "type":"string"
               },
               "vertices":{
                  "title":"Vertices",
                  "type":"string"
               },
               "result":{
                  "title":"Result",
                  "type":"string"
               }
            }
         },
         "UpdateWrapperResult":{
            "title":"UpdateWrapperResult",
            "required":[
               "old_wrapper_name",
               "new_wrapper_name"
            ],
            "type":"object",
            "properties":{
               "old_wrapper_name":{
                  "title":"Old Wrapper Name",
                  "type":"string"
               },
               "new_wrapper_name":{
                  "title":"New Wrapper Name",
                  "type":"string"
               }
            }
         },
         "UploadTypeMetaResult":{
            "title":"UploadTypeMetaResult",
            "required":[
               "uploaded_type",
               "action",
               "affected"
            ],
            "type":"object",
            "properties":{
               "uploaded_type":{
                  "title":"Uploaded Type",
                  "type":"string"
               },
               "action":{
                  "title":"Action",
                  "type":"string"
               },
               "affected":{
                  "title":"Affected",
                  "type":"array",
                  "items":{
                     
                  }
               }
            }
         },
         "User":{
            "title":"User",
            "required":[
               "user_id",
               "user_role",
               "user_name",
               "user_phoneNum",
               "user_email",
               "created_date"
            ],
            "type":"object",
            "properties":{
               "user_id":{
                  "title":"User Id",
                  "type":"string"
               },
               "user_role":{
                  "title":"User Role",
                  "type":"string"
               },
               "user_name":{
                  "title":"User Name",
                  "type":"string"
               },
               "user_phoneNum":{
                  "title":"User Phonenum",
                  "type":"string"
               },
               "user_email":{
                  "title":"User Email",
                  "type":"string"
               },
               "created_date":{
                  "title":"Created Date",
                  "type":"string"
               }
            }
         },
         "UserTypeMeta":{
            "title":"UserTypeMeta",
            "required":[
               "artifact_type",
               "builder",
               "build_env",
               "build_time"
            ],
            "type":"object",
            "properties":{
               "artifact_type":{
                  "title":"Artifact Type",
                  "type":"string"
               },
               "builder":{
                  "title":"Builder",
                  "type":"string"
               },
               "build_env":{
                  "title":"Build Env",
                  "type":"string"
               },
               "build_time":{
                  "title":"Build Time",
                  "type":"string"
               }
            }
         },
         "UsersInDB":{
            "title":"UsersInDB",
            "required":[
               "users"
            ],
            "type":"object",
            "properties":{
               "users":{
                  "title":"Users",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/User"
                  }
               }
            }
         },
         "ValidationError":{
            "title":"ValidationError",
            "required":[
               "loc",
               "msg",
               "type"
            ],
            "type":"object",
            "properties":{
               "loc":{
                  "title":"Location",
                  "type":"array",
                  "items":{
                     "anyOf":[
                        {
                           "type":"string"
                        },
                        {
                           "type":"integer"
                        }
                     ]
                  }
               },
               "msg":{
                  "title":"Message",
                  "type":"string"
               },
               "type":{
                  "title":"Error Type",
                  "type":"string"
               }
            }
         },
         "VertexAction":{
            "title":"VertexAction",
            "enum":[
               "release",
               "block"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "WmsCellRest":{
            "title":"WmsCellRest",
            "required":[
               "updater_id",
               "area_id",
               "cell_id",
               "map",
               "pose",
               "type",
               "direction",
               "status",
               "load",
               "size_x",
               "size_y"
            ],
            "type":"object",
            "properties":{
               "updater_id":{
                  "title":"Updater Id",
                  "type":"string"
               },
               "area_id":{
                  "title":"Area Id",
                  "type":"string"
               },
               "cell_id":{
                  "title":"Cell Id",
                  "type":"string"
               },
               "map":{
                  "title":"Map",
                  "type":"string"
               },
               "pose":{
                  "$ref":"#/components/schemas/GeometryPose"
               },
               "type":{
                  "title":"Type",
                  "type":"string"
               },
               "direction":{
                  "title":"Direction",
                  "type":"string"
               },
               "status":{
                  "title":"Status",
                  "type":"string"
               },
               "load":{
                  "title":"Load",
                  "type":"string"
               },
               "size_x":{
                  "title":"Size X",
                  "type":"number"
               },
               "size_y":{
                  "title":"Size Y",
                  "type":"number"
               }
            }
         },
         "WmsCellUpdateInfo":{
            "title":"WmsCellUpdateInfo",
            "required":[
               "map",
               "area_id",
               "cell_id",
               "status",
               "load"
            ],
            "type":"object",
            "properties":{
               "map":{
                  "title":"Map",
                  "type":"string"
               },
               "area_id":{
                  "title":"Area Id",
                  "type":"string"
               },
               "cell_id":{
                  "title":"Cell Id",
                  "type":"string"
               },
               "status":{
                  "title":"Status",
                  "type":"string"
               },
               "load":{
                  "title":"Load",
                  "type":"string"
               }
            }
         },
         "WmsCellsListRest":{
            "title":"WmsCellsListRest",
            "required":[
               "cells"
            ],
            "type":"object",
            "properties":{
               "cells":{
                  "title":"Cells",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/WmsCellRest"
                  }
               }
            }
         },
         "WmsCellsUpdateRest":{
            "title":"WmsCellsUpdateRest",
            "required":[
               "cells_to_update"
            ],
            "type":"object",
            "properties":{
               "cells_to_update":{
                  "title":"Cells To Update",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/WmsCellUpdateInfo"
                  }
               }
            }
         },
         "WrapperCategory":{
            "title":"WrapperCategory",
            "enum":[
               "Embedded",
               "External"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "WrapperCategoryResult":{
            "title":"WrapperCategoryResult",
            "required":[
               "category",
               "description"
            ],
            "type":"object",
            "properties":{
               "category":{
                  "title":"Category",
                  "type":"string"
               },
               "description":{
                  "title":"Description",
                  "type":"string"
               }
            }
         },
         "WrapperService":{
            "title":"WrapperService",
            "required":[
               "service",
               "parameter"
            ],
            "type":"object",
            "properties":{
               "service":{
                  "title":"Service",
                  "type":"string"
               },
               "parameter":{
                  "title":"Parameter",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/WrapperServiceParam"
                  }
               }
            }
         },
         "WrapperServiceParam":{
            "title":"WrapperServiceParam",
            "required":[
               "param_name",
               "data_type",
               "data_range",
               "default"
            ],
            "type":"object",
            "properties":{
               "param_name":{
                  "title":"Param Name",
                  "type":"string"
               },
               "data_type":{
                  "title":"Data Type",
                  "type":"string"
               },
               "data_range":{
                  "title":"Data Range",
                  "type":"string"
               },
               "default":{
                  "title":"Default",
                  "type":"string"
               }
            }
         },
         "WrapperTypeTemplateResult":{
            "title":"WrapperTypeTemplateResult",
            "required":[
               "type",
               "category",
               "services"
            ],
            "type":"object",
            "properties":{
               "type":{
                  "title":"Type",
                  "type":"string"
               },
               "category":{
                  "title":"Category",
                  "type":"string"
               },
               "services":{
                  "title":"Services",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/WrapperService"
                  }
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__ArtifactScanListRest":{
            "title":"ArtifactScanListRest",
            "required":[
               "total",
               "artifacts"
            ],
            "type":"object",
            "properties":{
               "total":{
                  "title":"Total",
                  "type":"integer"
               },
               "artifacts":{
                  "title":"Artifacts",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__ArtifactScanRest"
                  }
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__ArtifactScanRest":{
            "title":"ArtifactScanRest",
            "required":[
               "artifact_id",
               "artifact_name",
               "type",
               "sw_version"
            ],
            "type":"object",
            "properties":{
               "artifact_id":{
                  "title":"Artifact Id",
                  "type":"string"
               },
               "artifact_name":{
                  "title":"Artifact Name",
                  "type":"string"
               },
               "type":{
                  "title":"Type",
                  "type":"string"
               },
               "sw_version":{
                  "title":"Sw Version",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__CapabilityRest":{
            "title":"CapabilityRest",
            "required":[
               "speed",
               "size",
               "payload",
               "actuators",
               "behaviours",
               "perceptions"
            ],
            "type":"object",
            "properties":{
               "speed":{
                  "title":"Speed",
                  "type":"number"
               },
               "size":{
                  "$ref":"#/components/schemas/SizeRest"
               },
               "payload":{
                  "title":"Payload",
                  "type":"integer"
               },
               "actuators":{
                  "title":"Actuators",
                  "type":"string"
               },
               "behaviours":{
                  "title":"Behaviours",
                  "type":"string"
               },
               "perceptions":{
                  "title":"Perceptions",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__CoreSettingsRest":{
            "title":"CoreSettingsRest",
            "required":[
               "core_settings"
            ],
            "type":"object",
            "properties":{
               "core_settings":{
                  "title":"Core Settings",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__EventArrayRest":{
            "title":"EventArrayRest",
            "required":[
               "events"
            ],
            "type":"object",
            "properties":{
               "events":{
                  "title":"Events",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__EventRest"
                  }
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__EventRest":{
            "title":"EventRest",
            "required":[
               "robot_id",
               "event_id",
               "event_type",
               "level",
               "module",
               "event_msg",
               "time"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "event_id":{
                  "title":"Event Id",
                  "type":"string"
               },
               "event_type":{
                  "title":"Event Type",
                  "type":"string"
               },
               "level":{
                  "title":"Level",
                  "type":"string"
               },
               "module":{
                  "title":"Module",
                  "type":"string"
               },
               "event_msg":{
                  "title":"Event Msg",
                  "type":"string"
               },
               "time":{
                  "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__TimeRest"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__FleetStateRest":{
            "title":"FleetStateRest",
            "required":[
               "robots"
            ],
            "type":"object",
            "properties":{
               "robots":{
                  "title":"Robots",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__RobotStateRest"
                  }
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__LocationRest":{
            "title":"LocationRest",
            "required":[
               "t",
               "x",
               "y",
               "yaw"
            ],
            "type":"object",
            "properties":{
               "t":{
                  "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__TimeRest"
               },
               "x":{
                  "title":"X",
                  "type":"number"
               },
               "y":{
                  "title":"Y",
                  "type":"number"
               },
               "yaw":{
                  "title":"Yaw",
                  "type":"number"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__MapDeployRest":{
            "title":"MapDeployRest",
            "required":[
               "robot_list",
               "map_name"
            ],
            "type":"object",
            "properties":{
               "robot_list":{
                  "title":"Robot List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               },
               "map_name":{
                  "title":"Map Name",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__MapDetailRest":{
            "title":"MapDetailRest",
            "required":[
               "map_name",
               "resolution",
               "origin_x",
               "origin_y",
               "image"
            ],
            "type":"object",
            "properties":{
               "map_name":{
                  "title":"Map Name",
                  "type":"string"
               },
               "resolution":{
                  "title":"Resolution",
                  "type":"number"
               },
               "origin_x":{
                  "title":"Origin X",
                  "type":"number"
               },
               "origin_y":{
                  "title":"Origin Y",
                  "type":"number"
               },
               "image":{
                  "title":"Image",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__MapGetDeployStatusReqRest":{
            "title":"MapGetDeployStatusReqRest",
            "required":[
               "robot_list"
            ],
            "type":"object",
            "properties":{
               "robot_list":{
                  "title":"Robot List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__MapGetDeployStatusRspListRest":{
            "title":"MapGetDeployStatusRspListRest",
            "required":[
               "deploy_status"
            ],
            "type":"object",
            "properties":{
               "deploy_status":{
                  "title":"Deploy Status",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapGetDeployStatusRspRest"
                  }
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__MapGetDeployStatusRspRest":{
            "title":"MapGetDeployStatusRspRest",
            "required":[
               "robot_id",
               "status",
               "result"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "status":{
                  "title":"Status",
                  "type":"integer"
               },
               "result":{
                  "title":"Result",
                  "type":"integer"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__MapListRest":{
            "title":"MapListRest",
            "required":[
               "maps"
            ],
            "type":"object",
            "properties":{
               "maps":{
                  "title":"Maps",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__MapRest"
                  }
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__MapRest":{
            "title":"MapRest",
            "required":[
               "map_name",
               "resolution",
               "origin_x",
               "origin_y"
            ],
            "type":"object",
            "properties":{
               "map_name":{
                  "title":"Map Name",
                  "type":"string"
               },
               "resolution":{
                  "title":"Resolution",
                  "type":"number"
               },
               "origin_x":{
                  "title":"Origin X",
                  "type":"number"
               },
               "origin_y":{
                  "title":"Origin Y",
                  "type":"number"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__MapUploadRest":{
            "title":"MapUploadRest",
            "required":[
               "robot_id",
               "map_name"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "map_name":{
                  "title":"Map Name",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__PathListRest":{
            "title":"PathListRest",
            "required":[
               "paths"
            ],
            "type":"object",
            "properties":{
               "paths":{
                  "title":"Paths",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__PathRest"
                  }
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__PathRest":{
            "title":"PathRest",
            "required":[
               "robot_id",
               "points",
               "traffic_actions",
               "vertex_labels"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "points":{
                  "title":"Points",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__Pose2D"
                  }
               },
               "traffic_actions":{
                  "title":"Traffic Actions",
                  "type":"array",
                  "items":{
                     "type":"boolean"
                  }
               },
               "vertex_labels":{
                  "title":"Vertex Labels",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__Pose2D":{
            "title":"Pose2D",
            "required":[
               "x_",
               "y_",
               "theta_"
            ],
            "type":"object",
            "properties":{
               "x_":{
                  "title":"X ",
                  "type":"number"
               },
               "y_":{
                  "title":"Y ",
                  "type":"number"
               },
               "theta_":{
                  "title":"Theta ",
                  "type":"number"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__RobotScanListRest":{
            "title":"RobotScanListRest",
            "required":[
               "total",
               "robots"
            ],
            "type":"object",
            "properties":{
               "total":{
                  "title":"Total",
                  "type":"integer"
               },
               "robots":{
                  "title":"Robots",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__RobotScanRest"
                  }
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__RobotScanRest":{
            "title":"RobotScanRest",
            "required":[
               "robot_id",
               "robot_name",
               "model",
               "mode",
               "sw_version",
               "ip",
               "mac",
               "artifacts"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "robot_name":{
                  "title":"Robot Name",
                  "type":"string"
               },
               "model":{
                  "title":"Model",
                  "type":"string"
               },
               "mode":{
                  "title":"Mode",
                  "type":"string"
               },
               "sw_version":{
                  "title":"Sw Version",
                  "type":"string"
               },
               "ip":{
                  "title":"Ip",
                  "type":"string"
               },
               "mac":{
                  "title":"Mac",
                  "type":"string"
               },
               "artifacts":{
                  "title":"Artifacts",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__RobotStateRest":{
            "title":"RobotStateRest",
            "required":[
               "robot_id",
               "robot_name",
               "model",
               "task_id",
               "nav_status",
               "battery_percent",
               "velocity",
               "map",
               "location",
               "mileage",
               "role",
               "capability"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "robot_name":{
                  "title":"Robot Name",
                  "type":"string"
               },
               "model":{
                  "title":"Model",
                  "type":"string"
               },
               "task_id":{
                  "title":"Task Id",
                  "type":"string"
               },
               "nav_status":{
                  "title":"Nav Status",
                  "type":"integer"
               },
               "battery_percent":{
                  "title":"Battery Percent",
                  "type":"number"
               },
               "velocity":{
                  "title":"Velocity",
                  "type":"number"
               },
               "map":{
                  "title":"Map",
                  "type":"string"
               },
               "location":{
                  "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__LocationRest"
               },
               "mileage":{
                  "title":"Mileage",
                  "type":"number"
               },
               "role":{
                  "title":"Role",
                  "type":"string"
               },
               "capability":{
                  "$ref":"#/components/schemas/fastapi_app__api__v1__schemas__far_item__CapabilityRest"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__RoleDetailRest":{
            "title":"RoleDetailRest",
            "required":[
               "role_name",
               "behavior"
            ],
            "type":"object",
            "properties":{
               "role_name":{
                  "title":"Role Name",
                  "type":"string"
               },
               "behavior":{
                  "title":"Behavior",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__RoleListRest":{
            "title":"RoleListRest",
            "required":[
               "roles"
            ],
            "type":"object",
            "properties":{
               "roles":{
                  "title":"Roles",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/RoleRest"
                  }
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__SwRest":{
            "title":"SwRest",
            "required":[
               "sw_version"
            ],
            "type":"object",
            "properties":{
               "sw_version":{
                  "title":"Sw Version",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__TaskStateRest":{
            "title":"TaskStateRest",
            "required":[
               "tasks"
            ],
            "type":"object",
            "properties":{
               "tasks":{
                  "title":"Tasks",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/TaskSummaryRest"
                  }
               }
            }
         },
         "fastapi_app__api__v1__schemas__far_item__TimeRest":{
            "title":"TimeRest",
            "required":[
               "sec",
               "nanosec"
            ],
            "type":"object",
            "properties":{
               "sec":{
                  "title":"Sec",
                  "type":"integer"
               },
               "nanosec":{
                  "title":"Nanosec",
                  "type":"integer"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__ArtifactScanListRest":{
            "title":"ArtifactScanListRest",
            "required":[
               "total",
               "artifacts"
            ],
            "type":"object",
            "properties":{
               "total":{
                  "title":"Total",
                  "type":"integer"
               },
               "artifacts":{
                  "title":"Artifacts",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__ArtifactScanRest"
                  }
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__ArtifactScanRest":{
            "title":"ArtifactScanRest",
            "required":[
               "artifact_id",
               "artifact_name",
               "wrapper_id",
               "type",
               "sw_version",
               "ip",
               "mac",
               "artifact_category",
               "run_on_image",
               "support_sdk",
               "builder",
               "build_time",
               "build_env"
            ],
            "type":"object",
            "properties":{
               "artifact_id":{
                  "title":"Artifact Id",
                  "type":"string"
               },
               "artifact_name":{
                  "title":"Artifact Name",
                  "type":"string"
               },
               "wrapper_id":{
                  "title":"Wrapper Id",
                  "type":"string"
               },
               "type":{
                  "title":"Type",
                  "type":"string"
               },
               "sw_version":{
                  "title":"Sw Version",
                  "type":"string"
               },
               "ip":{
                  "title":"Ip",
                  "type":"string"
               },
               "mac":{
                  "title":"Mac",
                  "type":"string"
               },
               "artifact_category":{
                  "title":"Artifact Category",
                  "type":"string"
               },
               "run_on_image":{
                  "title":"Run On Image",
                  "type":"string"
               },
               "support_sdk":{
                  "title":"Support Sdk",
                  "type":"string"
               },
               "builder":{
                  "title":"Builder",
                  "type":"string"
               },
               "build_time":{
                  "title":"Build Time",
                  "type":"string"
               },
               "build_env":{
                  "title":"Build Env",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__CapabilityRest":{
            "title":"CapabilityRest",
            "required":[
               "speed",
               "size",
               "payload",
               "artifacts_ids",
               "artifacts_types",
               "behaviours",
               "perceptions"
            ],
            "type":"object",
            "properties":{
               "speed":{
                  "title":"Speed",
                  "type":"number"
               },
               "size":{
                  "$ref":"#/components/schemas/Size3D"
               },
               "payload":{
                  "title":"Payload",
                  "type":"integer"
               },
               "artifacts_ids":{
                  "title":"Artifacts Ids",
                  "type":"string"
               },
               "artifacts_types":{
                  "title":"Artifacts Types",
                  "type":"string"
               },
               "behaviours":{
                  "title":"Behaviours",
                  "type":"string"
               },
               "perceptions":{
                  "title":"Perceptions",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__CoreSettingsRest":{
            "title":"CoreSettingsRest",
            "required":[
               "core_settings"
            ],
            "type":"object",
            "properties":{
               "core_settings":{
                  "title":"Core Settings",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__EventArrayRest":{
            "title":"EventArrayRest",
            "required":[
               "events"
            ],
            "type":"object",
            "properties":{
               "events":{
                  "title":"Events",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__EventRest"
                  }
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__EventRest":{
            "title":"EventRest",
            "required":[
               "robot_id",
               "event_id",
               "event_type",
               "level",
               "module",
               "event_msg",
               "time"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "event_id":{
                  "title":"Event Id",
                  "type":"string"
               },
               "event_type":{
                  "title":"Event Type",
                  "type":"string"
               },
               "level":{
                  "title":"Level",
                  "type":"string"
               },
               "module":{
                  "title":"Module",
                  "type":"string"
               },
               "event_msg":{
                  "title":"Event Msg",
                  "type":"string"
               },
               "time":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TimeRest"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__FleetStateRest":{
            "title":"FleetStateRest",
            "required":[
               "fleet_state"
            ],
            "type":"object",
            "properties":{
               "fleet_state":{
                  "title":"Fleet State",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/OneFleetStateRest"
                  }
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__LocationRest":{
            "title":"LocationRest",
            "required":[
               "t",
               "x",
               "y",
               "yaw"
            ],
            "type":"object",
            "properties":{
               "t":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__TimeRest"
               },
               "x":{
                  "title":"X",
                  "type":"number"
               },
               "y":{
                  "title":"Y",
                  "type":"number"
               },
               "yaw":{
                  "title":"Yaw",
                  "type":"number"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__MapDeployRest":{
            "title":"MapDeployRest",
            "required":[
               "robot_list",
               "map_name"
            ],
            "type":"object",
            "properties":{
               "robot_list":{
                  "title":"Robot List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               },
               "map_name":{
                  "title":"Map Name",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__MapDetailRest":{
            "title":"MapDetailRest",
            "required":[
               "map_name",
               "mode",
               "resolution",
               "origin_x",
               "origin_y",
               "origin_theta",
               "negate",
               "occupied_thresh",
               "free_thresh",
               "image_type",
               "image_width",
               "image_height",
               "image"
            ],
            "type":"object",
            "properties":{
               "map_name":{
                  "title":"Map Name",
                  "type":"string"
               },
               "mode":{
                  "title":"Mode",
                  "type":"string"
               },
               "resolution":{
                  "title":"Resolution",
                  "type":"number"
               },
               "origin_x":{
                  "title":"Origin X",
                  "type":"number"
               },
               "origin_y":{
                  "title":"Origin Y",
                  "type":"number"
               },
               "origin_theta":{
                  "title":"Origin Theta",
                  "type":"number"
               },
               "negate":{
                  "title":"Negate",
                  "type":"integer"
               },
               "occupied_thresh":{
                  "title":"Occupied Thresh",
                  "type":"number"
               },
               "free_thresh":{
                  "title":"Free Thresh",
                  "type":"number"
               },
               "image_type":{
                  "title":"Image Type",
                  "type":"string"
               },
               "image_width":{
                  "title":"Image Width",
                  "type":"integer"
               },
               "image_height":{
                  "title":"Image Height",
                  "type":"integer"
               },
               "image":{
                  "title":"Image",
                  "type":"string"
               },
               "thumbnail_type":{
                  "title":"Thumbnail Type",
                  "type":"string"
               },
               "thumbnail_width":{
                  "title":"Thumbnail Width",
                  "type":"integer"
               },
               "thumbnail_height":{
                  "title":"Thumbnail Height",
                  "type":"integer"
               },
               "thumbnail":{
                  "title":"Thumbnail",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__MapGetDeployStatusReqRest":{
            "title":"MapGetDeployStatusReqRest",
            "required":[
               "robot_list"
            ],
            "type":"object",
            "properties":{
               "robot_list":{
                  "title":"Robot List",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__MapGetDeployStatusRspListRest":{
            "title":"MapGetDeployStatusRspListRest",
            "required":[
               "deploy_status"
            ],
            "type":"object",
            "properties":{
               "deploy_status":{
                  "title":"Deploy Status",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__MapGetDeployStatusRspRest"
                  }
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__MapGetDeployStatusRspRest":{
            "title":"MapGetDeployStatusRspRest",
            "required":[
               "robot_id",
               "status",
               "result"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "status":{
                  "title":"Status",
                  "type":"integer"
               },
               "result":{
                  "title":"Result",
                  "type":"integer"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__MapListRest":{
            "title":"MapListRest",
            "required":[
               "maps"
            ],
            "type":"object",
            "properties":{
               "maps":{
                  "title":"Maps",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__MapRest"
                  }
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__MapRest":{
            "title":"MapRest",
            "required":[
               "map_name",
               "resolution",
               "origin_x",
               "origin_y"
            ],
            "type":"object",
            "properties":{
               "map_name":{
                  "title":"Map Name",
                  "type":"string"
               },
               "resolution":{
                  "title":"Resolution",
                  "type":"number"
               },
               "origin_x":{
                  "title":"Origin X",
                  "type":"number"
               },
               "origin_y":{
                  "title":"Origin Y",
                  "type":"number"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__MapUploadRest":{
            "title":"MapUploadRest",
            "required":[
               "robot_id",
               "map_name"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "map_name":{
                  "title":"Map Name",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__PathListRest":{
            "title":"PathListRest",
            "required":[
               "paths"
            ],
            "type":"object",
            "properties":{
               "paths":{
                  "title":"Paths",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__PathRest"
                  }
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__PathRest":{
            "title":"PathRest",
            "required":[
               "robot_id",
               "points",
               "traffic_actions",
               "vertex_labels"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "points":{
                  "title":"Points",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__Pose2D"
                  }
               },
               "traffic_actions":{
                  "title":"Traffic Actions",
                  "type":"array",
                  "items":{
                     "type":"boolean"
                  }
               },
               "vertex_labels":{
                  "title":"Vertex Labels",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__Pose2D":{
            "title":"Pose2D",
            "required":[
               "x",
               "y",
               "theta"
            ],
            "type":"object",
            "properties":{
               "x":{
                  "title":"X",
                  "type":"number"
               },
               "y":{
                  "title":"Y",
                  "type":"number"
               },
               "theta":{
                  "title":"Theta",
                  "type":"number"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__RobotScanListRest":{
            "title":"RobotScanListRest",
            "required":[
               "total",
               "robots"
            ],
            "type":"object",
            "properties":{
               "total":{
                  "title":"Total",
                  "type":"integer"
               },
               "robots":{
                  "title":"Robots",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__RobotScanRest"
                  }
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__RobotScanRest":{
            "title":"RobotScanRest",
            "required":[
               "robot_id",
               "robot_name",
               "model",
               "mode",
               "sw_version",
               "ip",
               "mac",
               "artifacts"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "robot_name":{
                  "title":"Robot Name",
                  "type":"string"
               },
               "model":{
                  "title":"Model",
                  "type":"string"
               },
               "mode":{
                  "title":"Mode",
                  "type":"string"
               },
               "sw_version":{
                  "title":"Sw Version",
                  "type":"string"
               },
               "ip":{
                  "title":"Ip",
                  "type":"string"
               },
               "mac":{
                  "title":"Mac",
                  "type":"string"
               },
               "artifacts":{
                  "title":"Artifacts",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__RobotStateRest":{
            "title":"RobotStateRest",
            "required":[
               "robot_id",
               "robot_name",
               "model",
               "task_id",
               "mode",
               "battery_percent",
               "velocity",
               "map",
               "location",
               "customized_info",
               "mileage",
               "role",
               "fleet_name",
               "capability",
               "connection_status",
               "last_update_time"
            ],
            "type":"object",
            "properties":{
               "robot_id":{
                  "title":"Robot Id",
                  "type":"string"
               },
               "robot_name":{
                  "title":"Robot Name",
                  "type":"string"
               },
               "model":{
                  "title":"Model",
                  "type":"string"
               },
               "task_id":{
                  "title":"Task Id",
                  "type":"string"
               },
               "mode":{
                  "title":"Mode",
                  "type":"integer"
               },
               "battery_percent":{
                  "title":"Battery Percent",
                  "type":"number"
               },
               "velocity":{
                  "title":"Velocity",
                  "type":"number"
               },
               "map":{
                  "title":"Map",
                  "type":"string"
               },
               "location":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__LocationRest"
               },
               "customized_info":{
                  "title":"Customized Info",
                  "type":"string"
               },
               "mileage":{
                  "title":"Mileage",
                  "type":"number"
               },
               "role":{
                  "title":"Role",
                  "type":"string"
               },
               "fleet_name":{
                  "title":"Fleet Name",
                  "type":"string"
               },
               "capability":{
                  "$ref":"#/components/schemas/fastapi_app__api__v2__schemas__far_item__CapabilityRest"
               },
               "connection_status":{
                  "title":"Connection Status",
                  "type":"integer"
               },
               "last_update_time":{
                  "title":"Last Update Time",
                  "type":"number"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__RoleDetailRest":{
            "title":"RoleDetailRest",
            "required":[
               "behavior"
            ],
            "type":"object",
            "properties":{
               "behavior":{
                  "title":"Behavior",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__RoleListRest":{
            "title":"RoleListRest",
            "required":[
               "roles"
            ],
            "type":"object",
            "properties":{
               "roles":{
                  "title":"Roles",
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__SwRest":{
            "title":"SwRest",
            "required":[
               "sw_version"
            ],
            "type":"object",
            "properties":{
               "sw_version":{
                  "title":"Sw Version",
                  "type":"string"
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__TaskStateRest":{
            "title":"TaskStateRest",
            "required":[
               "system_status_code",
               "system_message",
               "swarm_data"
            ],
            "type":"object",
            "properties":{
               "system_status_code":{
                  "title":"System Status Code",
                  "type":"integer"
               },
               "system_message":{
                  "title":"System Message",
                  "type":"string"
               },
               "swarm_data":{
                  "title":"Swarm Data",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/TaskSummary"
                  }
               }
            }
         },
         "fastapi_app__api__v2__schemas__far_item__TimeRest":{
            "title":"TimeRest",
            "required":[
               "sec",
               "nanosec"
            ],
            "type":"object",
            "properties":{
               "sec":{
                  "title":"Sec",
                  "type":"integer"
               },
               "nanosec":{
                  "title":"Nanosec",
                  "type":"integer"
               }
            }
         }
      },
      "securitySchemes":{
         "OAuth2PasswordBearer":{
            "type":"oauth2",
            "flows":{
               "password":{
                  "scopes":{
                     
                  },
                  "tokenUrl":"/login/access-token"
               }
            }
         }
      }
   },
   "tags":[
      {
         "name":"events"
      },
      {
         "name":"fleets"
      },
      {
         "name":"robots"
      },
      {
         "name":"paths"
      },
      {
         "name":"artifacts"
      },
      {
         "name":"hik"
      },
      {
         "name":"wms"
      },
      {
         "name":"flows"
      },
      {
         "name":"tasks"
      },
      {
         "name":"roles"
      },
      {
         "name":"maps"
      },
      {
         "name":"triton_maps"
      },
      {
         "name":"graphs"
      },
      {
         "name":"logs"
      },
      {
         "name":"restart"
      },
      {
         "name":"settings"
      },
      {
         "name":"sw_update"
      },
      {
         "name":"sdk"
      },
      {
         "name":"license"
      },
      {
         "name":"event_callback"
      },
      {
         "name":"users"
      },
      {
         "name":"login"
      }
   ]
}
